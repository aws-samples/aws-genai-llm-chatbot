// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot test 1`] = `
{
  "Description": "Description: (uksb-1tupboc45) (version:0.1.122) (tag:C1:0,C2:0,C3:0,C4:0,C5:0,C6:2,C7:0,C8:0) ",
  "Mappings": {
    "DlcRepositoryAccountMap": {
      "ap-east-1": {
        "value": "871362719292",
      },
      "ap-northeast-1": {
        "value": "763104351884",
      },
      "ap-northeast-2": {
        "value": "763104351884",
      },
      "ap-south-1": {
        "value": "763104351884",
      },
      "ap-south-2": {
        "value": "772153158452",
      },
      "ap-southeast-1": {
        "value": "763104351884",
      },
      "ap-southeast-2": {
        "value": "763104351884",
      },
      "ap-southeast-3": {
        "value": "907027046896",
      },
      "ap-southeast-4": {
        "value": "457447274322",
      },
      "ca-central-1": {
        "value": "763104351884",
      },
      "cn-north-1": {
        "value": "727897471807",
      },
      "cn-northwest-1": {
        "value": "727897471807",
      },
      "eu-central-1": {
        "value": "763104351884",
      },
      "eu-central-2": {
        "value": "380420809688",
      },
      "eu-north-1": {
        "value": "763104351884",
      },
      "eu-south-1": {
        "value": "692866216735",
      },
      "eu-south-2": {
        "value": "503227376785",
      },
      "eu-west-1": {
        "value": "763104351884",
      },
      "eu-west-2": {
        "value": "763104351884",
      },
      "eu-west-3": {
        "value": "763104351884",
      },
      "me-central-1": {
        "value": "914824155844",
      },
      "me-south-1": {
        "value": "217643126080",
      },
      "sa-east-1": {
        "value": "763104351884",
      },
      "us-east-1": {
        "value": "763104351884",
      },
      "us-east-2": {
        "value": "763104351884",
      },
      "us-west-1": {
        "value": "763104351884",
      },
      "us-west-2": {
        "value": "763104351884",
      },
    },
    "RagEnginesSageMakerModelImageRepositoryCfnMappingF3891114": {
      "af-south-1": {
        "account": "626614931356",
      },
      "ap-east-1": {
        "account": "871362719292",
      },
      "ap-northeast-1": {
        "account": "763104351884",
      },
      "ap-northeast-2": {
        "account": "763104351884",
      },
      "ap-northeast-3": {
        "account": "364406365360",
      },
      "ap-south-1": {
        "account": "763104351884",
      },
      "ap-south-2": {
        "account": "772153158452",
      },
      "ap-southeast-1": {
        "account": "763104351884",
      },
      "ap-southeast-2": {
        "account": "763104351884",
      },
      "ap-southeast-3": {
        "account": "907027046896",
      },
      "ap-southeast-4": {
        "account": "457447274322",
      },
      "ca-central-1": {
        "account": "763104351884",
      },
      "cn-north-1": {
        "account": "727897471807",
      },
      "cn-northwest-1": {
        "account": "727897471807",
      },
      "eu-central-1": {
        "account": "763104351884",
      },
      "eu-central-2": {
        "account": "380420809688",
      },
      "eu-north-1": {
        "account": "763104351884",
      },
      "eu-south-1": {
        "account": "692866216735",
      },
      "eu-south-2": {
        "account": "503227376785",
      },
      "eu-west-1": {
        "account": "763104351884",
      },
      "eu-west-2": {
        "account": "763104351884",
      },
      "eu-west-3": {
        "account": "763104351884",
      },
      "me-central-1": {
        "account": "914824155844",
      },
      "me-south-1": {
        "account": "217643126080",
      },
      "sa-east-1": {
        "account": "763104351884",
      },
      "us-east-1": {
        "account": "763104351884",
      },
      "us-east-2": {
        "account": "763104351884",
      },
      "us-gov-east-1": {
        "account": "446045086412",
      },
      "us-gov-west-1": {
        "account": "442386744353",
      },
      "us-iso-east-1": {
        "account": "886529160074",
      },
      "us-isob-east-1": {
        "account": "094389454867",
      },
      "us-west-1": {
        "account": "763104351884",
      },
      "us-west-2": {
        "account": "763104351884",
      },
    },
    "ServiceprincipalMap": {
      "af-south-1": {
        "states": "states.af-south-1.amazonaws.com",
      },
      "ap-east-1": {
        "states": "states.ap-east-1.amazonaws.com",
      },
      "ap-northeast-1": {
        "states": "states.ap-northeast-1.amazonaws.com",
      },
      "ap-northeast-2": {
        "states": "states.ap-northeast-2.amazonaws.com",
      },
      "ap-northeast-3": {
        "states": "states.ap-northeast-3.amazonaws.com",
      },
      "ap-south-1": {
        "states": "states.ap-south-1.amazonaws.com",
      },
      "ap-south-2": {
        "states": "states.ap-south-2.amazonaws.com",
      },
      "ap-southeast-1": {
        "states": "states.ap-southeast-1.amazonaws.com",
      },
      "ap-southeast-2": {
        "states": "states.ap-southeast-2.amazonaws.com",
      },
      "ap-southeast-3": {
        "states": "states.ap-southeast-3.amazonaws.com",
      },
      "ap-southeast-4": {
        "states": "states.ap-southeast-4.amazonaws.com",
      },
      "ca-central-1": {
        "states": "states.ca-central-1.amazonaws.com",
      },
      "cn-north-1": {
        "states": "states.cn-north-1.amazonaws.com",
      },
      "cn-northwest-1": {
        "states": "states.cn-northwest-1.amazonaws.com",
      },
      "eu-central-1": {
        "states": "states.eu-central-1.amazonaws.com",
      },
      "eu-central-2": {
        "states": "states.eu-central-2.amazonaws.com",
      },
      "eu-north-1": {
        "states": "states.eu-north-1.amazonaws.com",
      },
      "eu-south-1": {
        "states": "states.eu-south-1.amazonaws.com",
      },
      "eu-south-2": {
        "states": "states.eu-south-2.amazonaws.com",
      },
      "eu-west-1": {
        "states": "states.eu-west-1.amazonaws.com",
      },
      "eu-west-2": {
        "states": "states.eu-west-2.amazonaws.com",
      },
      "eu-west-3": {
        "states": "states.eu-west-3.amazonaws.com",
      },
      "il-central-1": {
        "states": "states.il-central-1.amazonaws.com",
      },
      "me-central-1": {
        "states": "states.me-central-1.amazonaws.com",
      },
      "me-south-1": {
        "states": "states.me-south-1.amazonaws.com",
      },
      "sa-east-1": {
        "states": "states.sa-east-1.amazonaws.com",
      },
      "us-east-1": {
        "states": "states.us-east-1.amazonaws.com",
      },
      "us-east-2": {
        "states": "states.us-east-2.amazonaws.com",
      },
      "us-gov-east-1": {
        "states": "states.us-gov-east-1.amazonaws.com",
      },
      "us-gov-west-1": {
        "states": "states.us-gov-west-1.amazonaws.com",
      },
      "us-iso-east-1": {
        "states": "states.amazonaws.com",
      },
      "us-iso-west-1": {
        "states": "states.amazonaws.com",
      },
      "us-isob-east-1": {
        "states": "states.amazonaws.com",
      },
      "us-west-1": {
        "states": "states.us-west-1.amazonaws.com",
      },
      "us-west-2": {
        "states": "states.us-west-2.amazonaws.com",
      },
    },
  },
  "Outputs": {
    "AuthenticationIdentityPoolIdB65295D6": {
      "Value": {
        "Ref": "AuthenticationIdentityPool98062B23",
      },
    },
    "AuthenticationUserPoolIdF0D106F7": {
      "Value": {
        "Ref": "AuthenticationUserPool28698864",
      },
    },
    "AuthenticationUserPoolLink55CE7EC4": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "AWS::Region",
            },
            ".console.aws.amazon.com/cognito/v2/idp/user-pools/",
            {
              "Ref": "AuthenticationUserPool28698864",
            },
            "/users?region=",
            {
              "Ref": "AWS::Region",
            },
          ],
        ],
      },
    },
    "AuthenticationUserPoolWebClientId80D5526A": {
      "Value": {
        "Ref": "AuthenticationUserPoolUserPoolClient8AE1704E",
      },
    },
    "ChatBotApiConstructGraphqlAPIURL4C09A7B6": {
      "Value": {
        "Fn::GetAtt": [
          "ChatBotApiConstructChatbotApi21E23C68",
          "GraphQLUrl",
        ],
      },
    },
    "ChatBotApiConstructGraphqlapiIdF4097118": {
      "Value": {
        "Fn::GetAtt": [
          "ChatBotApiConstructChatbotApi21E23C68",
          "ApiId",
        ],
      },
    },
    "SharedApiKeysSecretName3D265ECA": {
      "Value": {
        "Fn::Join": [
          "-",
          [
            {
              "Fn::Select": [
                0,
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Fn::Select": [
                        6,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "SharedApiKeysSecret9EA666ED",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Fn::Select": [
                        6,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "SharedApiKeysSecret9EA666ED",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AuthenticationIdentityPool98062B23": {
      "DependsOn": [
        "AuthenticationUserPool28698864",
        "AuthenticationUserPoolsmsRole5227CBC5",
        "AuthenticationUserPoolUserPoolClient8AE1704E",
      ],
      "Properties": {
        "AllowUnauthenticatedIdentities": false,
        "CognitoIdentityProviders": [
          {
            "ClientId": {
              "Ref": "AuthenticationUserPoolUserPoolClient8AE1704E",
            },
            "ProviderName": {
              "Fn::Join": [
                "",
                [
                  "cognito-idp.",
                  {
                    "Ref": "AWS::Region",
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/",
                  {
                    "Ref": "AuthenticationUserPool28698864",
                  },
                ],
              ],
            },
            "ServerSideTokenCheck": true,
          },
        ],
      },
      "Type": "AWS::Cognito::IdentityPool",
    },
    "AuthenticationIdentityPoolAuthenticatedRole04DA16FF": {
      "DependsOn": [
        "AuthenticationUserPool28698864",
        "AuthenticationUserPoolsmsRole5227CBC5",
        "AuthenticationUserPoolUserPoolClient8AE1704E",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "AuthenticationIdentityPool98062B23",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Default Authenticated Role for Identity Pool ",
              {
                "Fn::GetAtt": [
                  "AuthenticationIdentityPool98062B23",
                  "Name",
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AuthenticationIdentityPoolDefaultRoleAttachment468E9E4F": {
      "DependsOn": [
        "AuthenticationUserPool28698864",
        "AuthenticationUserPoolsmsRole5227CBC5",
        "AuthenticationUserPoolUserPoolClient8AE1704E",
      ],
      "Properties": {
        "IdentityPoolId": {
          "Ref": "AuthenticationIdentityPool98062B23",
        },
        "Roles": {
          "authenticated": {
            "Fn::GetAtt": [
              "AuthenticationIdentityPoolAuthenticatedRole04DA16FF",
              "Arn",
            ],
          },
          "unauthenticated": {
            "Fn::GetAtt": [
              "AuthenticationIdentityPoolUnauthenticatedRoleC08D0BC1",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
    },
    "AuthenticationIdentityPoolUnauthenticatedRoleC08D0BC1": {
      "DependsOn": [
        "AuthenticationUserPool28698864",
        "AuthenticationUserPoolsmsRole5227CBC5",
        "AuthenticationUserPoolUserPoolClient8AE1704E",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "unauthenticated",
                },
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "AuthenticationIdentityPool98062B23",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Default Unauthenticated Role for Identity Pool ",
              {
                "Fn::GetAtt": [
                  "AuthenticationIdentityPool98062B23",
                  "Name",
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AuthenticationUserPool28698864": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-COG1",
              "reason": "Default password policy requires min length of 8, digits, lowercase characters, symbols and uppercase characters: https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_cognito.PasswordPolicy.html",
            },
            {
              "id": "AwsSolutions-COG2",
              "reason": "MFA not required for user usage.",
            },
          ],
        },
      },
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_phone_number",
              "Priority": 1,
            },
            {
              "Name": "verified_email",
              "Priority": 2,
            },
          ],
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": true,
        },
        "AutoVerifiedAttributes": [
          "email",
          "phone_number",
        ],
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "EnabledMfas": [
          "SMS_MFA",
        ],
        "MfaConfiguration": "OPTIONAL",
        "SmsConfiguration": {
          "ExternalId": "AuthenticationUserPool374E07F6",
          "SnsCallerArn": {
            "Fn::GetAtt": [
              "AuthenticationUserPoolsmsRole5227CBC5",
              "Arn",
            ],
          },
        },
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UserPoolAddOns": {
          "AdvancedSecurityMode": "ENFORCED",
        },
        "UsernameAttributes": [
          "email",
        ],
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthenticationUserPoolUserPoolClient8AE1704E": {
      "Properties": {
        "AllowedOAuthFlows": [
          "implicit",
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin",
        ],
        "CallbackURLs": [
          "https://example.com",
        ],
        "ExplicitAuthFlows": [
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_ADMIN_USER_PASSWORD_AUTH",
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
        ],
        "GenerateSecret": false,
        "SupportedIdentityProviders": [
          "COGNITO",
        ],
        "UserPoolId": {
          "Ref": "AuthenticationUserPool28698864",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "AuthenticationUserPoolsmsRole5227CBC5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "AuthenticationUserPool374E07F6",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "cognito-idp.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "sns:Publish",
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "sns-publish",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
      "DependsOn": [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      ],
      "Properties": {
        "Code": {
          "ZipFile": "import boto3  # type: ignore
import json
import logging
import urllib.request

s3 = boto3.client("s3")

EVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'
CONFIGURATION_TYPES = ["TopicConfigurations", "QueueConfigurations", "LambdaFunctionConfigurations"]

def handler(event: dict, context):
  response_status = "SUCCESS"
  error_message = ""
  try:
    props = event["ResourceProperties"]
    notification_configuration = props["NotificationConfiguration"]
    managed = props.get('Managed', 'true').lower() == 'true'
    stack_id = event['StackId']
    old = event.get("OldResourceProperties", {}).get("NotificationConfiguration", {})
    if managed:
      config = handle_managed(event["RequestType"], notification_configuration)
    else:
      config = handle_unmanaged(props["BucketName"], stack_id, event["RequestType"], notification_configuration, old)
    s3.put_bucket_notification_configuration(Bucket=props["BucketName"], NotificationConfiguration=config)
  except Exception as e:
    logging.exception("Failed to put bucket notification configuration")
    response_status = "FAILED"
    error_message = f"Error: {str(e)}. "
  finally:
    submit_response(event, context, response_status, error_message)

def handle_managed(request_type, notification_configuration):
  if request_type == 'Delete':
    return {}
  return notification_configuration

def handle_unmanaged(bucket, stack_id, request_type, notification_configuration, old):
  def with_id(n):
    n['Id'] = f"{stack_id}-{hash(json.dumps(n, sort_keys=True))}"
    return n

  external_notifications = {}
  existing_notifications = s3.get_bucket_notification_configuration(Bucket=bucket)
  for t in CONFIGURATION_TYPES:
    if request_type == 'Update':
        ids = [with_id(n) for n in old.get(t, [])]
        old_incoming_ids = [n['Id'] for n in ids]
        external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'] in old_incoming_ids]
    elif request_type == 'Delete':
        external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f"{stack_id}-")]
    elif request_type == 'Create':
        external_notifications[t] = [n for n in existing_notifications.get(t, [])]
  if EVENTBRIDGE_CONFIGURATION in existing_notifications:
    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]

  if request_type == 'Delete':
    return external_notifications

  notifications = {}
  for t in CONFIGURATION_TYPES:
    external = external_notifications.get(t, [])
    incoming = [with_id(n) for n in notification_configuration.get(t, [])]
    notifications[t] = external + incoming

  if EVENTBRIDGE_CONFIGURATION in notification_configuration:
    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]
  elif EVENTBRIDGE_CONFIGURATION in external_notifications:
    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]

  return notifications

def submit_response(event: dict, context, response_status: str, error_message: str):
  response_body = json.dumps(
    {
      "Status": response_status,
      "Reason": f"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}",
      "PhysicalResourceId": event.get("PhysicalResourceId") or event["LogicalResourceId"],
      "StackId": event["StackId"],
      "RequestId": event["RequestId"],
      "LogicalResourceId": event["LogicalResourceId"],
      "NoEcho": False,
    }
  ).encode("utf-8")
  headers = {"content-type": "", "content-length": str(len(response_body))}
  try:
    req = urllib.request.Request(url=event["ResponseURL"], headers=headers, data=response_body, method="PUT")
    with urllib.request.urlopen(req) as response:
      print(response.read().decode("utf-8"))
    print("Status code: " + response.reason)
  except Exception as e:
      print("send(..) failed executing request.urlopen(..): " + str(e))
",
        },
        "Description": "AWS CloudFormation handler for "Custom::S3BucketNotifications" resources (@aws-cdk/aws-s3)",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": [
          {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ChatBotApiConstructChatBucketsFilesBucket66FE32D5": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AccelerateConfiguration": {
          "AccelerationStatus": "Enabled",
        },
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*",
              ],
              "AllowedMethods": [
                "PUT",
                "POST",
                "GET",
                "HEAD",
              ],
              "AllowedOrigins": [
                "*",
              ],
              "ExposedHeaders": [
                "ETag",
              ],
              "MaxAge": 3000,
            },
          ],
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "ChatBotApiConstructChatBucketsLogsBucket1B8722C1",
          },
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "ChatBotApiConstructChatBucketsFilesBucketAutoDeleteObjectsCustomResourceF5B45AF5": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "ChatBotApiConstructChatBucketsFilesBucketPolicyE1458A10",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "ChatBotApiConstructChatBucketsFilesBucket66FE32D5",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "ChatBotApiConstructChatBucketsFilesBucketPolicyE1458A10": {
      "Properties": {
        "Bucket": {
          "Ref": "ChatBotApiConstructChatBucketsFilesBucket66FE32D5",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ChatBotApiConstructChatBucketsFilesBucket66FE32D5",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ChatBotApiConstructChatBucketsFilesBucket66FE32D5",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ChatBotApiConstructChatBucketsFilesBucket66FE32D5",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ChatBotApiConstructChatBucketsFilesBucket66FE32D5",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "ChatBotApiConstructChatBucketsLogsBucket1B8722C1": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "Logging bucket does not require it's own access logs.",
            },
          ],
        },
      },
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "ChatBotApiConstructChatBucketsLogsBucketAutoDeleteObjectsCustomResourceE613B4B3": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "ChatBotApiConstructChatBucketsLogsBucketPolicy2F5E0EFA",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "ChatBotApiConstructChatBucketsLogsBucket1B8722C1",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "ChatBotApiConstructChatBucketsLogsBucketPolicy2F5E0EFA": {
      "Properties": {
        "Bucket": {
          "Ref": "ChatBotApiConstructChatBucketsLogsBucket1B8722C1",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ChatBotApiConstructChatBucketsLogsBucket1B8722C1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ChatBotApiConstructChatBucketsLogsBucket1B8722C1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ChatBotApiConstructChatBucketsLogsBucket1B8722C1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ChatBotApiConstructChatBucketsLogsBucket1B8722C1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "ChatBotApiConstructChatBucketsUserFeedbackBucketAutoDeleteObjectsCustomResource7CDB4CC1": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "ChatBotApiConstructChatBucketsUserFeedbackBucketPolicy9BE13EC0",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "ChatBotApiConstructChatBucketsUserFeedbackBucketFAFD14AB",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "ChatBotApiConstructChatBucketsUserFeedbackBucketFAFD14AB": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "ChatBotApiConstructChatBucketsLogsBucket1B8722C1",
          },
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "ChatBotApiConstructChatBucketsUserFeedbackBucketPolicy9BE13EC0": {
      "Properties": {
        "Bucket": {
          "Ref": "ChatBotApiConstructChatBucketsUserFeedbackBucketFAFD14AB",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ChatBotApiConstructChatBucketsUserFeedbackBucketFAFD14AB",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ChatBotApiConstructChatBucketsUserFeedbackBucketFAFD14AB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ChatBotApiConstructChatBucketsUserFeedbackBucketFAFD14AB",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ChatBotApiConstructChatBucketsUserFeedbackBucketFAFD14AB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "ChatBotApiConstructChatDynamoDBTablesSessionsTableD81EF9A7": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "SessionId",
            "AttributeType": "S",
          },
          {
            "AttributeName": "UserId",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "byUserId",
            "KeySchema": [
              {
                "AttributeName": "UserId",
                "KeyType": "HASH",
              },
            ],
            "Projection": {
              "ProjectionType": "ALL",
            },
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "SessionId",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "UserId",
            "KeyType": "RANGE",
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": {
          "SSEEnabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "ChatBotApiConstructChatbotApi21E23C68": {
      "Properties": {
        "AdditionalAuthenticationProviders": [
          {
            "AuthenticationType": "AWS_IAM",
          },
        ],
        "AuthenticationType": "AMAZON_COGNITO_USER_POOLS",
        "LogConfig": {
          "CloudWatchLogsRoleArn": {
            "Fn::GetAtt": [
              "ChatBotApiConstructapiLoggingRole6BE21CB3",
              "Arn",
            ],
          },
          "FieldLogLevel": "ALL",
        },
        "Name": "ChatbotGraphqlApi",
        "UserPoolConfig": {
          "AwsRegion": {
            "Ref": "AWS::Region",
          },
          "DefaultAction": "ALLOW",
          "UserPoolId": {
            "Ref": "AuthenticationUserPool28698864",
          },
        },
        "Visibility": "PRIVATE",
        "XrayEnabled": true,
      },
      "Type": "AWS::AppSync::GraphQLApi",
    },
    "ChatBotApiConstructChatbotApiLogRetentionCF5F6908": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/appsync/apis/",
              {
                "Fn::GetAtt": [
                  "ChatBotApiConstructChatbotApi21E23C68",
                  "ApiId",
                ],
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ChatBotApiConstructChatbotApiSchema07900657": {
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "Definition": "# Workspaces

input CreateWorkspaceAuroraInput {
  name: String!
  kind: String!
  embeddingsModelProvider: String!
  embeddingsModelName: String!
  crossEncoderModelProvider: String!
  crossEncoderModelName: String!
  languages: [String!]!
  metric: String!
  index: Boolean!
  hybridSearch: Boolean!
  chunkingStrategy: String!
  chunkSize: Int!
  chunkOverlap: Int!
}

input CreateWorkspaceKendraInput {
  name: String!
  kind: String!
  kendraIndexId: String!
  useAllData: Boolean!
}

input CreateWorkspaceBedrockKBInput {
  name: String!
  kind: String!
  knowledgeBaseId: String!
  hybridSearch: Boolean!
}

input CreateWorkspaceOpenSearchInput {
  name: String!
  kind: String!
  embeddingsModelProvider: String!
  embeddingsModelName: String!
  crossEncoderModelProvider: String!
  crossEncoderModelName: String!
  languages: [String!]!
  hybridSearch: Boolean!
  chunkingStrategy: String!
  chunkSize: Int!
  chunkOverlap: Int!
}

input CalculateEmbeddingsInput {
  provider: String!
  model: String!
  passages: [String]!
  task: String!
}

type CrawlerProperties @aws_cognito_user_pools {
  followLinks: Boolean
  limit: Int
  contentTypes: [String!]!
}

type CrossEncoderData @aws_cognito_user_pools {
  provider: String!
  name: String!
  default: Boolean!
}

type DeleteSessionResult @aws_cognito_user_pools {
  id: String
  deleted: Boolean!
}

type DetectedLanguage @aws_cognito_user_pools {
  code: String!
  score: Float!
}

type Document @aws_cognito_user_pools {
  workspaceId: String!
  id: String!
  type: String!
  subType: String
  status: String
  title: String
  path: String
  sizeInBytes: Int
  vectors: Int
  subDocuments: Int
  crawlerProperties: CrawlerProperties
  errors: [String!]
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime
  rssFeedId: String
  rssLastCheckedAt: AWSDateTime
}

type DocumentResult @aws_cognito_user_pools {
  workspaceId: String!
  documentId: String!
  status: String
}

type DeleteDocumentResult @aws_cognito_user_pools {
  documentId: String!
  deleted: Boolean!
}

type UserFeedbackResult @aws_cognito_user_pools {
  feedback_id: String!
}

input DocumentSubscriptionStatusInput {
  workspaceId: String!
  documentId: String!
  status: String!
}

type DocumentsResult @aws_cognito_user_pools {
  items: [Document]!
  lastDocumentId: String
}

type Embedding @aws_cognito_user_pools {
  passage: String
  vector: [Float!]!
}

type EmbeddingModel @aws_cognito_user_pools {
  provider: String!
  name: String!
  dimensions: Int!
  default: Boolean
}

input FileUploadInput {
  workspaceId: String!
  fileName: String!
}

type FileUploadResult @aws_cognito_user_pools {
  url: String!
  fields: String
}

input GetDocumentInput {
  workspaceId: String!
  documentId: String!
}

input GetRSSPostsInput {
  workspaceId: String!
  documentId: String!
  lastDocumentId: String
}

type KendraIndex @aws_cognito_user_pools {
  id: String!
  name: String!
  external: Boolean!
}

type BedrockKB @aws_cognito_user_pools {
  id: String!
  name: String!
  external: Boolean!
}

input ListDocumentsInput {
  workspaceId: String!
  documentType: String!
  lastDocumentId: String
}

type Model @aws_cognito_user_pools {
  name: String!
  provider: String!
  interface: String!
  ragSupported: Boolean!
  inputModalities: [String!]!
  outputModalities: [String!]!
  streaming: Boolean!
}

type PassageRank @aws_cognito_user_pools {
  score: Float!
  passage: String!
}

input QnADocumentInput {
  workspaceId: String!
  question: String!
  answer: String!
}

type RagEngine @aws_cognito_user_pools {
  id: String!
  name: String!
  enabled: Boolean!
}

input RankPassagesInput {
  provider: String!
  model: String!
  reference: String!
  passages: [String]!
}

input RssFeedInput {
  workspaceId: String!
  address: String!
  limit: Int!
  title: String
  followLinks: Boolean!
  contentTypes: [String!]!
}

input SemanticSearchInput {
  workspaceId: String!
  query: String!
}

type SemanticSearchItem @aws_cognito_user_pools {
  sources: [String]
  chunkId: String
  workspaceId: ID!
  documentId: String
  documentSubId: String
  documentSubType: String
  documentType: String!
  path: String
  language: String
  title: String
  content: String
  contentComplement: String
  vectorSearchScore: Float
  keywordSearchScore: Float
  score: Float
}

type SemanticSearchResult @aws_cognito_user_pools {
  engine: String!
  workspaceId: String!
  queryLanguage: String
  supportedLanguages: [String!]
  detectedLanguages: [DetectedLanguage!]
  items: [SemanticSearchItem!]
  vectorSearchMetric: String
  vectorSearchItems: [SemanticSearchItem!]
  keywordSearchItems: [SemanticSearchItem!]
}

type Session @aws_cognito_user_pools {
  id: String!
  title: String
  startTime: AWSDateTime!
  history: [SessionHistoryItem]
}

type SessionHistoryItem @aws_cognito_user_pools {
  type: String!
  content: String!
  metadata: String
}

input DeleteDocumentInput {
  workspaceId: String!
  documentId: String!
}

input UserFeedbackInput {
  sessionId: String!
  key: Int!
  feedback: String!
  prompt: String!
  completion: String!
  model: String!
}

input TextDocumentInput {
  workspaceId: String!
  title: String!
  content: String!
}

input WebsiteInput {
  workspaceId: String!
  sitemap: Boolean!
  address: String!
  followLinks: Boolean!
  limit: Int!
  contentTypes: [String!]!
}

type Workspace @aws_cognito_user_pools {
  id: String!
  name: String!
  formatVersion: Int
  engine: String!
  status: String
  aossEngine: String
  languages: [String]
  hasIndex: Boolean
  embeddingsModelProvider: String
  embeddingsModelName: String
  embeddingsModelDimensions: Int
  crossEncoderModelName: String
  crossEncoderModelProvider: String
  metric: String
  index: Boolean
  hybridSearch: Boolean
  chunkingStrategy: String
  chunkSize: Int
  chunkOverlap: Int
  vectors: Int
  documents: Int
  sizeInBytes: Int
  kendraIndexId: String
  kendraIndexExternal: Boolean
  kendraUseAllData: Boolean
  knowledgeBaseId: String
  knowledgeBaseExternal: Boolean
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type Channel @aws_iam @aws_cognito_user_pools {
  data: String
  sessionId: String
  userId: String
}

type Mutation {
  createKendraWorkspace(input: CreateWorkspaceKendraInput!): Workspace!
    @aws_cognito_user_pools
  createBedrockKBWorkspace(input: CreateWorkspaceBedrockKBInput!): Workspace!
    @aws_cognito_user_pools
  createOpenSearchWorkspace(input: CreateWorkspaceOpenSearchInput!): Workspace!
    @aws_cognito_user_pools
  createAuroraWorkspace(input: CreateWorkspaceAuroraInput!): Workspace!
    @aws_cognito_user_pools
  startKendraDataSync(workspaceId: String!): Boolean @aws_cognito_user_pools
  deleteWorkspace(workspaceId: String!): Boolean @aws_cognito_user_pools
  deleteDocument(input: DeleteDocumentInput!): DeleteDocumentResult @aws_cognito_user_pools
  addTextDocument(input: TextDocumentInput!): DocumentResult
    @aws_cognito_user_pools
  addUserFeedback(input: UserFeedbackInput!): UserFeedbackResult
    @aws_cognito_user_pools
  addQnADocument(input: QnADocumentInput!): DocumentResult
    @aws_cognito_user_pools
  setDocumentSubscriptionStatus(
    input: DocumentSubscriptionStatusInput!
  ): DocumentResult @aws_cognito_user_pools
  addWebsite(input: WebsiteInput!): DocumentResult @aws_cognito_user_pools
  addRssFeed(input: RssFeedInput!): DocumentResult @aws_cognito_user_pools
  updateRssFeed(input: RssFeedInput!): DocumentResult @aws_cognito_user_pools
  deleteUserSessions: [DeleteSessionResult!] @aws_cognito_user_pools
  deleteSession(id: String!): DeleteSessionResult @aws_cognito_user_pools
  # Real-time
  sendQuery(data: String): String @aws_cognito_user_pools
  publishResponse(sessionId: String, userId: String, data: String): Channel
    @aws_iam
}

type Query {
  checkHealth: Boolean @aws_cognito_user_pools
  getUploadFileURL(input: FileUploadInput!): FileUploadResult
    @aws_cognito_user_pools
  listModels: [Model!]! @aws_cognito_user_pools
  listWorkspaces: [Workspace!]! @aws_cognito_user_pools
  getWorkspace(workspaceId: String!): Workspace @aws_cognito_user_pools
  listRagEngines: [RagEngine!]! @aws_cognito_user_pools
  performSemanticSearch(input: SemanticSearchInput!): SemanticSearchResult!
    @aws_cognito_user_pools
  listSessions: [Session!]! @aws_cognito_user_pools
  listEmbeddingModels: [EmbeddingModel!]! @aws_cognito_user_pools
  calculateEmbeddings(input: CalculateEmbeddingsInput!): [Embedding]!
    @aws_cognito_user_pools
  getSession(id: String!): Session @aws_cognito_user_pools
  listKendraIndexes: [KendraIndex!]! @aws_cognito_user_pools
  listBedrockKnowledgeBases: [BedrockKB!]! @aws_cognito_user_pools
  isKendraDataSynching(workspaceId: String!): Boolean @aws_cognito_user_pools
  listDocuments(input: ListDocumentsInput!): DocumentsResult!
    @aws_cognito_user_pools
  getDocument(input: GetDocumentInput!): Document @aws_cognito_user_pools
  getRSSPosts(input: GetRSSPostsInput!): DocumentsResult @aws_cognito_user_pools
  listCrossEncoders: [CrossEncoderData!] @aws_cognito_user_pools
  rankPassages(input: RankPassagesInput!): [PassageRank!]!
    @aws_cognito_user_pools
}

type Subscription {
  receiveMessages(sessionId: String): Channel
    @aws_subscribe(mutations: ["publishResponse"])
    @aws_cognito_user_pools
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
",
      },
      "Type": "AWS::AppSync::GraphQLSchema",
    },
    "ChatBotApiConstructChatbotApiaddQnADocumentresolverC95FB963": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "addQnADocument",
        "Kind": "UNIT",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApiaddRssFeedresolver9F913F6A": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "addRssFeed",
        "Kind": "UNIT",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApiaddTextDocumentresolver680DA667": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "addTextDocument",
        "Kind": "UNIT",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApiaddUserFeedbackresolver574EB01B": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "addUserFeedback",
        "Kind": "UNIT",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApiaddWebsiteresolver25115D46": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "addWebsite",
        "Kind": "UNIT",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApicalculateEmbeddingsresolverC0CF8E1F": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "calculateEmbeddings",
        "Kind": "UNIT",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApicheckHealthresolver80DC2ACB": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "checkHealth",
        "Kind": "UNIT",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApicreateAuroraWorkspaceresolver8E22CC68": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "createAuroraWorkspace",
        "Kind": "UNIT",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApicreateBedrockKBWorkspaceresolverC35C5AB8": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "createBedrockKBWorkspace",
        "Kind": "UNIT",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApicreateKendraWorkspaceresolver03A533E2": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "createKendraWorkspace",
        "Kind": "UNIT",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApicreateOpenSearchWorkspaceresolverA389A810": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "createOpenSearchWorkspace",
        "Kind": "UNIT",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApideleteDocumentresolverA14AE09A": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "deleteDocument",
        "Kind": "UNIT",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApideleteSessionresolverFCC1E8B7": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "deleteSession",
        "Kind": "UNIT",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApideleteUserSessionsresolver706D199F": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "deleteUserSessions",
        "Kind": "UNIT",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApideleteWorkspaceresolver228C8114": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "deleteWorkspace",
        "Kind": "UNIT",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApigetDocumentresolver1E6BDD76": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "getDocument",
        "Kind": "UNIT",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApigetRSSPostsresolverFF07D9C6": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "getRSSPosts",
        "Kind": "UNIT",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApigetSessionresolver13AA64C4": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "getSession",
        "Kind": "UNIT",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApigetUploadFileURLresolverBE578016": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "getUploadFileURL",
        "Kind": "UNIT",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApigetWorkspaceresolver94E27235": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "getWorkspace",
        "Kind": "UNIT",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApiisKendraDataSynchingresolverB18D45FA": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "isKendraDataSynching",
        "Kind": "UNIT",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApilistBedrockKnowledgeBasesresolver6F8C3883": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "listBedrockKnowledgeBases",
        "Kind": "UNIT",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApilistCrossEncodersresolver4989A3B4": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "listCrossEncoders",
        "Kind": "UNIT",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApilistDocumentsresolver4B1DDCA3": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "listDocuments",
        "Kind": "UNIT",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApilistEmbeddingModelsresolverD495B554": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "listEmbeddingModels",
        "Kind": "UNIT",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApilistKendraIndexesresolverA44B2E92": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "listKendraIndexes",
        "Kind": "UNIT",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApilistModelsresolverE81C56DC": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "listModels",
        "Kind": "UNIT",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApilistRagEnginesresolver323FFE06": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "listRagEngines",
        "Kind": "UNIT",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApilistSessionsresolverF7F1AEAF": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "listSessions",
        "Kind": "UNIT",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApilistWorkspacesresolverFF39438E": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "listWorkspaces",
        "Kind": "UNIT",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApinoneF51A83B9": {
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "Name": "relaysource",
        "Type": "NONE",
      },
      "Type": "AWS::AppSync::DataSource",
    },
    "ChatBotApiConstructChatbotApiperformSemanticSearchresolver309792B7": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "performSemanticSearch",
        "Kind": "UNIT",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE": {
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::GetAtt": [
              "ChatBotApiConstructRestApiGraphQLApiHandlerA19E8192",
              "Arn",
            ],
          },
        },
        "Name": "proxyResolverFunction",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApiproxyResolverFunctionServiceRoleB7AB42FC",
            "Arn",
          ],
        },
        "Type": "AWS_LAMBDA",
      },
      "Type": "AWS::AppSync::DataSource",
    },
    "ChatBotApiConstructChatbotApiproxyResolverFunctionServiceRoleB7AB42FC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ChatBotApiConstructChatbotApiproxyResolverFunctionServiceRoleDefaultPolicy3093148B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ChatBotApiConstructRestApiGraphQLApiHandlerA19E8192",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ChatBotApiConstructRestApiGraphQLApiHandlerA19E8192",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ChatBotApiConstructChatbotApiproxyResolverFunctionServiceRoleDefaultPolicy3093148B",
        "Roles": [
          {
            "Ref": "ChatBotApiConstructChatbotApiproxyResolverFunctionServiceRoleB7AB42FC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ChatBotApiConstructChatbotApipublishresponseresolver8F9491D8": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApinoneF51A83B9",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "CodeS3Location": {
          "Fn::Sub": "s3://cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}/9674d65c2dc89ec931ff3f617d44972d1710ea521a654eb3b1b294814a6392dc.js",
        },
        "DataSourceName": "relaysource",
        "FieldName": "publishResponse",
        "Kind": "UNIT",
        "Runtime": {
          "Name": "APPSYNC_JS",
          "RuntimeVersion": "1.0.0",
        },
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApirankPassagesresolver13E34AF7": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "rankPassages",
        "Kind": "UNIT",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApirealtimeResolverFunction7F6519C6": {
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::GetAtt": [
              "ChatBotApiConstructRealtimeResolverslambdaresolver417A0684",
              "Arn",
            ],
          },
        },
        "Name": "realtimeResolverFunction",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApirealtimeResolverFunctionServiceRoleAF61E705",
            "Arn",
          ],
        },
        "Type": "AWS_LAMBDA",
      },
      "Type": "AWS::AppSync::DataSource",
    },
    "ChatBotApiConstructChatbotApirealtimeResolverFunctionServiceRoleAF61E705": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ChatBotApiConstructChatbotApirealtimeResolverFunctionServiceRoleDefaultPolicy510920FC": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ChatBotApiConstructRealtimeResolverslambdaresolver417A0684",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ChatBotApiConstructRealtimeResolverslambdaresolver417A0684",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ChatBotApiConstructChatbotApirealtimeResolverFunctionServiceRoleDefaultPolicy510920FC",
        "Roles": [
          {
            "Ref": "ChatBotApiConstructChatbotApirealtimeResolverFunctionServiceRoleAF61E705",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ChatBotApiConstructChatbotApisendmessageresolverF43B06F2": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApirealtimeResolverFunction7F6519C6",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "realtimeResolverFunction",
        "FieldName": "sendQuery",
        "Kind": "UNIT",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApisetDocumentSubscriptionStatusresolver2B0A268A": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "setDocumentSubscriptionStatus",
        "Kind": "UNIT",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApistartKendraDataSyncresolver6AE43B09": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "startKendraDataSync",
        "Kind": "UNIT",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApisubscriptionresolver85677E60": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApinoneF51A83B9",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "CodeS3Location": {
          "Fn::Sub": "s3://cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}/4edd9618bc0937271352df1dcc99520e7cc9bc3f1a5fa7952dc8f1858f6c768e.js",
        },
        "DataSourceName": "relaysource",
        "FieldName": "receiveMessages",
        "Kind": "UNIT",
        "Runtime": {
          "Name": "APPSYNC_JS",
          "RuntimeVersion": "1.0.0",
        },
        "TypeName": "Subscription",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructChatbotApiupdateRssFeedresolverFE3674B4": {
      "DependsOn": [
        "ChatBotApiConstructChatbotApiproxyResolverFunction22AA16EE",
        "ChatBotApiConstructChatbotApiSchema07900657",
      ],
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructChatbotApi21E23C68",
            "ApiId",
          ],
        },
        "DataSourceName": "proxyResolverFunction",
        "FieldName": "updateRssFeed",
        "Kind": "UNIT",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ChatBotApiConstructRealtimeMessagesTopic85DE37B6": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SNS2",
              "reason": "No sensitive data in topic.",
            },
            {
              "id": "AwsSolutions-SNS3",
              "reason": "No sensitive data in topic.",
            },
          ],
        },
      },
      "Type": "AWS::SNS::Topic",
    },
    "ChatBotApiConstructRealtimeOutgoingMessagesDLQA7E125CC": {
      "DeletionPolicy": "Delete",
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "ChatBotApiConstructRealtimeOutgoingMessagesDLQPolicy8CD0DE58": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "ChatBotApiConstructRealtimeOutgoingMessagesDLQA7E125CC",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "ChatBotApiConstructRealtimeOutgoingMessagesDLQA7E125CC",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "ChatBotApiConstructRealtimeOutgoingMessagesQueue46A1222D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "ChatBotApiConstructRealtimeOutgoingMessagesDLQA7E125CC",
              "Arn",
            ],
          },
          "maxReceiveCount": 3,
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "ChatBotApiConstructRealtimeOutgoingMessagesQueueChatBotApiConstructRealtimeMessagesTopic51A2E0414E41B904": {
      "DependsOn": [
        "ChatBotApiConstructRealtimeOutgoingMessagesQueuePolicyAE0D4828",
      ],
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "ChatBotApiConstructRealtimeOutgoingMessagesQueue46A1222D",
            "Arn",
          ],
        },
        "FilterPolicy": {
          "direction": [
            "OUT",
          ],
        },
        "FilterPolicyScope": "MessageBody",
        "Protocol": "sqs",
        "TopicArn": {
          "Ref": "ChatBotApiConstructRealtimeMessagesTopic85DE37B6",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "ChatBotApiConstructRealtimeOutgoingMessagesQueuePolicyAE0D4828": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "ChatBotApiConstructRealtimeOutgoingMessagesQueue46A1222D",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "events.amazonaws.com",
                  "sqs.amazonaws.com",
                ],
              },
              "Resource": {
                "Fn::GetAtt": [
                  "ChatBotApiConstructRealtimeOutgoingMessagesQueue46A1222D",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sqs:SendMessage",
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Ref": "ChatBotApiConstructRealtimeMessagesTopic85DE37B6",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "ChatBotApiConstructRealtimeOutgoingMessagesQueue46A1222D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "ChatBotApiConstructRealtimeOutgoingMessagesQueue46A1222D",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "ChatBotApiConstructRealtimeResolverslambdaresolver417A0684": {
      "DependsOn": [
        "ChatBotApiConstructRealtimeResolverslambdaresolverServiceRoleDefaultPolicy289FBDE8",
        "ChatBotApiConstructRealtimeResolverslambdaresolverServiceRoleB83D9D98",
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Description": "Appsync resolver handling LLM Queries",
        "Environment": {
          "Variables": {
            "SNS_TOPIC_ARN": {
              "Ref": "ChatBotApiConstructRealtimeMessagesTopic85DE37B6",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":lambda:",
                {
                  "Ref": "AWS::Region",
                },
                ":017000801446:layer:AWSLambdaPowertoolsPythonV2:46",
              ],
            ],
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "Role": {
          "Fn::GetAtt": [
            "ChatBotApiConstructRealtimeResolverslambdaresolverServiceRoleB83D9D98",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "ChatBotApiConstructRealtimeResolverslambdaresolverSecurityGroupEAD7914C",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
            },
            {
              "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ChatBotApiConstructRealtimeResolverslambdaresolverSecurityGroupEAD7914C": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function ChatBotApiConstructRealtimeResolverslambdaresolverF2A02B90",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ChatBotApiConstructRealtimeResolverslambdaresolverServiceRoleB83D9D98": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ChatBotApiConstructRealtimeResolverslambdaresolverServiceRoleDefaultPolicy289FBDE8": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "ChatBotApiConstructRealtimeMessagesTopic85DE37B6",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ChatBotApiConstructRealtimeResolverslambdaresolverServiceRoleDefaultPolicy289FBDE8",
        "Roles": [
          {
            "Ref": "ChatBotApiConstructRealtimeResolverslambdaresolverServiceRoleB83D9D98",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ChatBotApiConstructRealtimeResolversoutgoingmessagehandlerEABDDD78": {
      "DependsOn": [
        "ChatBotApiConstructRealtimeResolversoutgoingmessagehandlerServiceRoleDefaultPolicy78FB7CB9",
        "ChatBotApiConstructRealtimeResolversoutgoingmessagehandlerServiceRoleBD2EC7CC",
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Environment": {
          "Variables": {
            "GRAPHQL_ENDPOINT": {
              "Fn::GetAtt": [
                "ChatBotApiConstructChatbotApi21E23C68",
                "GraphQLUrl",
              ],
            },
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:lambda:",
                {
                  "Ref": "AWS::Region",
                },
                ":094274105915:layer:AWSLambdaPowertoolsTypeScript:22",
              ],
            ],
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "Role": {
          "Fn::GetAtt": [
            "ChatBotApiConstructRealtimeResolversoutgoingmessagehandlerServiceRoleBD2EC7CC",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "ChatBotApiConstructRealtimeResolversoutgoingmessagehandlerSecurityGroupE737282B",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
            },
            {
              "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ChatBotApiConstructRealtimeResolversoutgoingmessagehandlerSecurityGroupE737282B": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function ChatBotApiConstructRealtimeResolversoutgoingmessagehandlerE15371A7",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ChatBotApiConstructRealtimeResolversoutgoingmessagehandlerServiceRoleBD2EC7CC": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ChatBotApiConstructRealtimeResolversoutgoingmessagehandlerServiceRoleDefaultPolicy78FB7CB9": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ChatBotApiConstructRealtimeOutgoingMessagesQueue46A1222D",
                  "Arn",
                ],
              },
            },
            {
              "Action": "appsync:GraphQL",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":appsync:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":apis/",
                    {
                      "Fn::GetAtt": [
                        "ChatBotApiConstructChatbotApi21E23C68",
                        "ApiId",
                      ],
                    },
                    "/types/Mutation/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ChatBotApiConstructRealtimeResolversoutgoingmessagehandlerServiceRoleDefaultPolicy78FB7CB9",
        "Roles": [
          {
            "Ref": "ChatBotApiConstructRealtimeResolversoutgoingmessagehandlerServiceRoleBD2EC7CC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ChatBotApiConstructRealtimeResolversoutgoingmessagehandlerSqsEventSourceChatBotApiConstructRealtimeOutgoingMessagesQueueAC28DDB8865782DF": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "EventSourceArn": {
          "Fn::GetAtt": [
            "ChatBotApiConstructRealtimeOutgoingMessagesQueue46A1222D",
            "Arn",
          ],
        },
        "FunctionName": {
          "Ref": "ChatBotApiConstructRealtimeResolversoutgoingmessagehandlerEABDDD78",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "ChatBotApiConstructRestApiApiSecurityGroup01DF524F": {
      "Properties": {
        "GroupDescription": "Default/ChatBotApiConstruct/RestApi/ApiSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ChatBotApiConstructRestApiGraphQLApiHandlerA19E8192": {
      "DependsOn": [
        "ChatBotApiConstructRestApiGraphQLApiHandlerServiceRoleDefaultPolicyFF371064",
        "ChatBotApiConstructRestApiGraphQLApiHandlerServiceRole94ABDD64",
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "Architectures": [
          "x86_64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Description": "Main Appsync resolver",
        "Environment": {
          "Variables": {
            "API_KEYS_SECRETS_ARN": {
              "Ref": "SharedApiKeysSecret9EA666ED",
            },
            "AURORA_DB_SECRET_ID": {
              "Ref": "RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9",
            },
            "CONFIG_PARAMETER_NAME": {
              "Ref": "SharedConfig358B4A20",
            },
            "CREATE_AURORA_WORKSPACE_WORKFLOW_ARN": {
              "Ref": "RagEnginesAuroraPgVectorCreateAuroraWorkspace50EFF4E7",
            },
            "CREATE_KENDRA_WORKSPACE_WORKFLOW_ARN": {
              "Ref": "RagEnginesKendraRetrievalCreateKendraWorkspace5D8DE7EF",
            },
            "CREATE_OPEN_SEARCH_WORKSPACE_WORKFLOW_ARN": {
              "Ref": "RagEnginesOpenSearchVectorCreateOpenSearchWorkspace2B2FCA5B",
            },
            "DEFAULT_KENDRA_INDEX_ID": {
              "Fn::GetAtt": [
                "RagEnginesKendraRetrievalIndex922B65FC",
                "Id",
              ],
            },
            "DEFAULT_KENDRA_INDEX_NAME": "prefix-genaichatbot-workspac",
            "DEFAULT_KENDRA_S3_DATA_SOURCE_BUCKET_NAME": {
              "Ref": "RagEnginesKendraRetrievalKendraDataBucket1627A447",
            },
            "DEFAULT_KENDRA_S3_DATA_SOURCE_ID": {
              "Fn::GetAtt": [
                "RagEnginesKendraRetrievalKendraS3DataSourceF4400C3D",
                "Id",
              ],
            },
            "DELETE_DOCUMENT_WORKFLOW_ARN": {
              "Ref": "RagEnginesWorkspacesDeleteDocumentA1FD6471",
            },
            "DELETE_WORKSPACE_WORKFLOW_ARN": {
              "Ref": "RagEnginesWorkspacesDeleteWorkspace6908C6DA",
            },
            "DOCUMENTS_BY_COMPOUND_KEY_INDEX_NAME": "by_compound_key_idx",
            "DOCUMENTS_BY_STATUS_INDEX": "by_status_idx",
            "DOCUMENTS_TABLE_NAME": {
              "Ref": "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
            },
            "FILE_IMPORT_WORKFLOW_ARN": {
              "Ref": "RagEnginesDataImportFileImportWorkflowFileImportStateMachine398F0217",
            },
            "LOG_LEVEL": "INFO",
            "MODELS_PARAMETER_NAME": {
              "Ref": "ModelsModelsParameter4A14799B",
            },
            "OPEN_SEARCH_COLLECTION_ENDPOINT": {
              "Fn::GetAtt": [
                "RagEnginesOpenSearchVectorOpenSearchCollection0550028F",
                "CollectionEndpoint",
              ],
            },
            "POWERTOOLS_DEV": "false",
            "POWERTOOLS_LOGGER_LOG_EVENT": "true",
            "POWERTOOLS_SERVICE_NAME": "chatbot",
            "PROCESSING_BUCKET_NAME": {
              "Ref": "RagEnginesDataImportProcessingBucketA7BE9701",
            },
            "RSS_FEED_INGESTOR_FUNCTION": {
              "Fn::GetAtt": [
                "RagEnginesDataImportRssSubscriptionRssIngestorC19E7D9E",
                "Arn",
              ],
            },
            "SAGEMAKER_RAG_MODELS_ENDPOINT": {
              "Fn::GetAtt": [
                "RagEnginesSageMakerModelMultiAB24AEndpoint6DA7D681",
                "EndpointName",
              ],
            },
            "SESSIONS_BY_USER_ID_INDEX_NAME": "byUserId",
            "SESSIONS_TABLE_NAME": {
              "Ref": "ChatBotApiConstructChatDynamoDBTablesSessionsTableD81EF9A7",
            },
            "UPLOAD_BUCKET_NAME": {
              "Ref": "RagEnginesDataImportUploadBucket061D697E",
            },
            "USER_FEEDBACK_BUCKET_NAME": {
              "Ref": "ChatBotApiConstructChatBucketsUserFeedbackBucketFAFD14AB",
            },
            "WEBSITE_CRAWLING_WORKFLOW_ARN": {
              "Ref": "RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawling9B1CEC96",
            },
            "WORKSPACES_BY_OBJECT_TYPE_INDEX_NAME": "by_object_type_idx",
            "WORKSPACES_TABLE_NAME": {
              "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
            },
            "X_ORIGIN_VERIFY_SECRET_ARN": {
              "Ref": "SharedXOriginVerifySecret258B0376",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":lambda:",
                {
                  "Ref": "AWS::Region",
                },
                ":017000801446:layer:AWSLambdaPowertoolsPythonV2:46",
              ],
            ],
          },
          {
            "Ref": "SharedCommonLayerFC89CBCE",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "ChatBotApiConstructRestApiGraphQLApiHandlerServiceRole94ABDD64",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 600,
        "TracingConfig": {
          "Mode": "Active",
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "ChatBotApiConstructRestApiApiSecurityGroup01DF524F",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
            },
            {
              "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ChatBotApiConstructRestApiGraphQLApiHandlerLogRetention11512DD5": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ChatBotApiConstructRestApiGraphQLApiHandlerA19E8192",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ChatBotApiConstructRestApiGraphQLApiHandlerServiceRole94ABDD64": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ChatBotApiConstructRestApiGraphQLApiHandlerServiceRoleDefaultPolicyFF371064": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportRssSubscriptionRssIngestorC19E7D9E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportRssSubscriptionRssIngestorC19E7D9E",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9",
              },
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "RagEnginesAuroraPgVectorCreateAuroraWorkspace50EFF4E7",
              },
            },
            {
              "Action": "aoss:APIAccessAll",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RagEnginesOpenSearchVectorOpenSearchCollection0550028F",
                  "Arn",
                ],
              },
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "RagEnginesOpenSearchVectorCreateOpenSearchWorkspace2B2FCA5B",
              },
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "RagEnginesKendraRetrievalCreateKendraWorkspace5D8DE7EF",
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesKendraRetrievalKendraDataBucket1627A447",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesKendraRetrievalKendraDataBucket1627A447",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kendra:Retrieve",
                "kendra:Query",
                "kendra:BatchDeleteDocument",
                "kendra:BatchPutDocument",
                "kendra:StartDataSourceSyncJob",
                "kendra:DescribeDataSourceSyncJob",
                "kendra:StopDataSourceSyncJob",
                "kendra:ListDataSourceSyncJobs",
                "kendra:ListDataSources",
                "kendra:DescribeIndex",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesKendraRetrievalIndex922B65FC",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesKendraRetrievalIndex922B65FC",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "RagEnginesDataImportFileImportWorkflowFileImportStateMachine398F0217",
              },
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawling9B1CEC96",
              },
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "RagEnginesWorkspacesDeleteWorkspace6908C6DA",
              },
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "RagEnginesWorkspacesDeleteDocumentA1FD6471",
              },
            },
            {
              "Action": "sagemaker:InvokeEndpoint",
              "Effect": "Allow",
              "Resource": {
                "Ref": "RagEnginesSageMakerModelMultiAB24AEndpoint6DA7D681",
              },
            },
            {
              "Action": "sagemaker:InvokeEndpoint",
              "Effect": "Allow",
              "Resource": {
                "Ref": "ModelsamazonFalconLiteendpointFalconLite71C23411",
              },
            },
            {
              "Action": "sagemaker:InvokeEndpoint",
              "Effect": "Allow",
              "Resource": {
                "Ref": "ModelsHuggingFaceM4idefics80binstructendpointIDEFICS80BBC34A48F",
              },
            },
            {
              "Action": [
                "comprehend:DetectDominantLanguage",
                "comprehend:DetectSentiment",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "SharedXOriginVerifySecret258B0376",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "SharedApiKeysSecret9EA666ED",
              },
            },
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/",
                    {
                      "Ref": "SharedConfig358B4A20",
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/",
                    {
                      "Ref": "ModelsModelsParameter4A14799B",
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ChatBotApiConstructChatDynamoDBTablesSessionsTableD81EF9A7",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ChatBotApiConstructChatDynamoDBTablesSessionsTableD81EF9A7",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ChatBotApiConstructChatBucketsUserFeedbackBucketFAFD14AB",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ChatBotApiConstructChatBucketsUserFeedbackBucketFAFD14AB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportUploadBucket061D697E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportUploadBucket061D697E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportProcessingBucketA7BE9701",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportProcessingBucketA7BE9701",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "bedrock:ListFoundationModels",
                "bedrock:ListCustomModels",
                "bedrock:InvokeModel",
                "bedrock:InvokeModelWithResponseStream",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ChatBotApiConstructRestApiGraphQLApiHandlerServiceRoleDefaultPolicyFF371064",
        "Roles": [
          {
            "Ref": "ChatBotApiConstructRestApiGraphQLApiHandlerServiceRole94ABDD64",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ChatBotApiConstructapiLoggingRole6BE21CB3": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Access to all log groups required for CloudWatch log group creation.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "logs:*",
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "loggingPolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Environment": {
          "Variables": {
            "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem",
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "RagEnginesSageMakerModelMultiAB24AScriptAwsCliLayer3B70313A",
          },
        ],
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesSageMakerModelMultiAB24ABucketF09A69F9",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesSageMakerModelMultiAB24ABucketF09A69F9",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "RagEnginesSageMakerModelMultiAB24ALogsBucket1624BE94",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ModelsEndpointConfigFalconLite56D2BEF1": {
      "DependsOn": [
        "ModelsamazonFalconLitemodelFalconLiteA0714F90",
      ],
      "Properties": {
        "ProductionVariants": [
          {
            "ContainerStartupHealthCheckTimeoutInSeconds": 600,
            "InitialInstanceCount": 1,
            "InitialVariantWeight": 1,
            "InstanceType": "ml.g5.12xlarge",
            "ModelName": {
              "Fn::GetAtt": [
                "ModelsamazonFalconLitemodelFalconLiteA0714F90",
                "ModelName",
              ],
            },
            "VariantName": "AllTraffic",
          },
        ],
      },
      "Type": "AWS::SageMaker::EndpointConfig",
    },
    "ModelsEndpointConfigIDEFICS80B8A31DDC6": {
      "DependsOn": [
        "ModelsHuggingFaceM4idefics80binstructmodelIDEFICS80B1F09D07D",
      ],
      "Properties": {
        "ProductionVariants": [
          {
            "ContainerStartupHealthCheckTimeoutInSeconds": 600,
            "InitialInstanceCount": 1,
            "InitialVariantWeight": 1,
            "InstanceType": "ml.g5.48xlarge",
            "ModelName": {
              "Fn::GetAtt": [
                "ModelsHuggingFaceM4idefics80binstructmodelIDEFICS80B1F09D07D",
                "ModelName",
              ],
            },
            "VariantName": "AllTraffic",
          },
        ],
      },
      "Type": "AWS::SageMaker::EndpointConfig",
    },
    "ModelsFalconLiteRole90259899": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Gives user ability to deploy and delete endpoints from the UI.",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Gives user ability to deploy and delete endpoints from the UI.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "sagemaker.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSageMakerFullAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ModelsFalconLiteRoleDefaultPolicy064BAFF1": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Gives user ability to deploy and delete endpoints from the UI.",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Gives user ability to deploy and delete endpoints from the UI.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Fn::FindInMap": [
                        "DlcRepositoryAccountMap",
                        {
                          "Ref": "AWS::Region",
                        },
                        "value",
                      ],
                    },
                    ":repository/huggingface-pytorch-tgi-inference",
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ModelsFalconLiteRoleDefaultPolicy064BAFF1",
        "Roles": [
          {
            "Ref": "ModelsFalconLiteRole90259899",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ModelsHuggingFaceM4idefics80binstructendpointIDEFICS80BBC34A48F": {
      "DependsOn": [
        "ModelsEndpointConfigIDEFICS80B8A31DDC6",
      ],
      "Properties": {
        "EndpointConfigName": {
          "Fn::GetAtt": [
            "ModelsEndpointConfigIDEFICS80B8A31DDC6",
            "EndpointConfigName",
          ],
        },
        "EndpointName": "HuggingFaceM4-idefics-80b-instruct",
        "Tags": [
          {
            "Key": "modelId",
            "Value": "HuggingFaceM4/idefics-80b-instruct",
          },
        ],
      },
      "Type": "AWS::SageMaker::Endpoint",
    },
    "ModelsHuggingFaceM4idefics80binstructmodelIDEFICS80B1F09D07D": {
      "Properties": {
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "ModelsIDEFICS80BRole5BE23C49",
            "Arn",
          ],
        },
        "PrimaryContainer": {
          "Environment": {
            "HF_MODEL_ID": "HuggingFaceM4/idefics-80b-instruct",
            "HF_MODEL_QUANTIZE": "bitsandbytes",
            "MAX_BATCH_TOTAL_TOKENS": "8192",
            "MAX_INPUT_LENGTH": "1024",
            "MAX_TOTAL_TOKENS": "2048",
            "SAGEMAKER_CONTAINER_LOG_LEVEL": "20",
            "SAGEMAKER_REGION": {
              "Ref": "AWS::Region",
            },
            "SM_NUM_GPUS": "8",
          },
          "Image": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::FindInMap": [
                    "DlcRepositoryAccountMap",
                    {
                      "Ref": "AWS::Region",
                    },
                    "value",
                  ],
                },
                ".dkr.ecr.",
                {
                  "Ref": "AWS::Region",
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix",
                },
                "/huggingface-pytorch-tgi-inference:2.0.1-tgi1.1.0-gpu-py39-cu118-ubuntu20.04",
              ],
            ],
          },
          "Mode": "SingleModel",
        },
        "Tags": [
          {
            "Key": "modelId",
            "Value": "HuggingFaceM4/idefics-80b-instruct",
          },
        ],
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "SharedVPC6716DA5E",
                "DefaultSecurityGroup",
              ],
            },
          ],
          "Subnets": [
            {
              "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
            },
            {
              "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
            },
          ],
        },
      },
      "Type": "AWS::SageMaker::Model",
    },
    "ModelsIDEFICS80BRole5BE23C49": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Gives user ability to deploy and delete endpoints from the UI.",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Gives user ability to deploy and delete endpoints from the UI.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "sagemaker.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSageMakerFullAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ModelsIDEFICS80BRoleDefaultPolicy33F8A86E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Gives user ability to deploy and delete endpoints from the UI.",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Gives user ability to deploy and delete endpoints from the UI.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Fn::FindInMap": [
                        "DlcRepositoryAccountMap",
                        {
                          "Ref": "AWS::Region",
                        },
                        "value",
                      ],
                    },
                    ":repository/huggingface-pytorch-tgi-inference",
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ModelsIDEFICS80BRoleDefaultPolicy33F8A86E",
        "Roles": [
          {
            "Ref": "ModelsIDEFICS80BRole5BE23C49",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ModelsModelsParameter4A14799B": {
      "Properties": {
        "Type": "String",
        "Value": "[{"name":"amazon-FalconLite","endpoint":"amazon-FalconLite","responseStreamingSupported":false,"inputModalities":["TEXT"],"outputModalities":["TEXT"],"interface":"langchain","ragSupported":true},{"name":"HuggingFaceM4-idefics-80b-instruct","endpoint":"HuggingFaceM4-idefics-80b-instruct","responseStreamingSupported":false,"inputModalities":["TEXT","IMAGE"],"outputModalities":["TEXT"],"interface":"multimodal","ragSupported":false}]",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "ModelsamazonFalconLiteendpointFalconLite71C23411": {
      "DependsOn": [
        "ModelsEndpointConfigFalconLite56D2BEF1",
      ],
      "Properties": {
        "EndpointConfigName": {
          "Fn::GetAtt": [
            "ModelsEndpointConfigFalconLite56D2BEF1",
            "EndpointConfigName",
          ],
        },
        "EndpointName": "amazon-FalconLite",
        "Tags": [
          {
            "Key": "modelId",
            "Value": "amazon/FalconLite",
          },
        ],
      },
      "Type": "AWS::SageMaker::Endpoint",
    },
    "ModelsamazonFalconLitemodelFalconLiteA0714F90": {
      "Properties": {
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "ModelsFalconLiteRole90259899",
            "Arn",
          ],
        },
        "PrimaryContainer": {
          "Environment": {
            "DNTK_ALPHA_SCALER": "0.25",
            "GPTQ_BITS": "4",
            "GPTQ_GROUPSIZE": "128",
            "HF_MODEL_ID": "amazon/FalconLite",
            "HF_MODEL_QUANTIZE": "gptq",
            "MAX_BATCH_PREFILL_TOKENS": "12001",
            "MAX_BATCH_TOTAL_TOKENS": "12001",
            "MAX_INPUT_LENGTH": "12000",
            "MAX_TOTAL_TOKENS": "12001",
            "SAGEMAKER_CONTAINER_LOG_LEVEL": "20",
            "SAGEMAKER_REGION": {
              "Ref": "AWS::Region",
            },
            "SM_NUM_GPUS": "4",
            "TRUST_REMOTE_CODE": "true",
          },
          "Image": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::FindInMap": [
                    "DlcRepositoryAccountMap",
                    {
                      "Ref": "AWS::Region",
                    },
                    "value",
                  ],
                },
                ".dkr.ecr.",
                {
                  "Ref": "AWS::Region",
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix",
                },
                "/huggingface-pytorch-tgi-inference:2.0.1-tgi0.9.3-gpu-py39-cu118-ubuntu20.04",
              ],
            ],
          },
          "Mode": "SingleModel",
        },
        "Tags": [
          {
            "Key": "modelId",
            "Value": "amazon/FalconLite",
          },
        ],
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "SharedVPC6716DA5E",
                "DefaultSecurityGroup",
              ],
            },
          ],
          "Subnets": [
            {
              "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
            },
            {
              "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
            },
          ],
        },
      },
      "Type": "AWS::SageMaker::Model",
    },
    "RagEnginesAuroraPgVectorAuroraDatabase2A003265": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-RDS10",
              "reason": "Deletion protection disabled to allow deletion as part of the CloudFormation stack.",
            },
            {
              "id": "AwsSolutions-RDS2",
              "reason": "Encryption cannot be enabled on an unencrypted DB Cluster, therefore enabling will destroy existing data. Docs provide instructions for users requiring it.",
            },
          ],
        },
      },
      "Properties": {
        "CopyTagsToSnapshot": true,
        "DBClusterParameterGroupName": "default.aurora-postgresql15",
        "DBSubnetGroupName": {
          "Ref": "RagEnginesAuroraPgVectorAuroraDatabaseSubnets038B8C27",
        },
        "EnableIAMDatabaseAuthentication": true,
        "Engine": "aurora-postgresql",
        "EngineVersion": "15.3",
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "RagEnginesAuroraPgVectorAuroraDatabaseSecretBF0EF63E",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "RagEnginesAuroraPgVectorAuroraDatabaseSecretBF0EF63E",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "Port": 5432,
        "ServerlessV2ScalingConfiguration": {
          "MaxCapacity": 2,
          "MinCapacity": 0.5,
        },
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroup333F94D8",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9": {
      "Properties": {
        "SecretId": {
          "Ref": "RagEnginesAuroraPgVectorAuroraDatabaseSecretBF0EF63E",
        },
        "TargetId": {
          "Ref": "RagEnginesAuroraPgVectorAuroraDatabase2A003265",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "RagEnginesAuroraPgVectorAuroraDatabaseSecretBF0EF63E": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Generated by the CDK for stack: ",
              {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@"\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{"username":"postgres"}",
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroup333F94D8": {
      "Properties": {
        "GroupDescription": "RDS security group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromChatBotApiConstructRestApiApiSecurityGroup5956F387IndirectPort6F9024AE": {
      "Properties": {
        "Description": "from ChatBotApiConstructRestApiApiSecurityGroup5956F387:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorAuroraDatabase2A003265",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroup333F94D8",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ChatBotApiConstructRestApiApiSecurityGroup01DF524F",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorAuroraDatabase2A003265",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromRagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionSecurityGroup90937669IndirectPortF35F96D5": {
      "Properties": {
        "Description": "from RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionSecurityGroup90937669:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorAuroraDatabase2A003265",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroup333F94D8",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionSecurityGroup1A0FE458",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorAuroraDatabase2A003265",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromRagEnginesAuroraPgVectorDatabaseSetupFunctionSecurityGroup868747A2IndirectPort6045707A": {
      "Properties": {
        "Description": "from RagEnginesAuroraPgVectorDatabaseSetupFunctionSecurityGroup868747A2:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorAuroraDatabase2A003265",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroup333F94D8",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorDatabaseSetupFunctionSecurityGroupDFD5001A",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorAuroraDatabase2A003265",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromRagEnginesDataImportFileImportBatchJobFargateComputeEnvironmentSecurityGroupB72DF80DIndirectPort533F0865": {
      "Properties": {
        "Description": "from RagEnginesDataImportFileImportBatchJobFargateComputeEnvironmentSecurityGroupB72DF80D:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorAuroraDatabase2A003265",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroup333F94D8",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "RagEnginesDataImportFileImportBatchJobFargateComputeEnvironmentSecurityGroupDBC1F0DD",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorAuroraDatabase2A003265",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromRagEnginesDataImportWebCrawlerBatchJobWebCrawlerFargateComputeEnvironmentSecurityGroup485782FFIndirectPort3EC7335D": {
      "Properties": {
        "Description": "from RagEnginesDataImportWebCrawlerBatchJobWebCrawlerFargateComputeEnvironmentSecurityGroup485782FF:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorAuroraDatabase2A003265",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroup333F94D8",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "RagEnginesDataImportWebCrawlerBatchJobWebCrawlerFargateComputeEnvironmentSecurityGroup1141A545",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorAuroraDatabase2A003265",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromRagEnginesWorkspacesDeleteDocumentDeleteDocumentFunctionSecurityGroup6310BD77IndirectPortCDECACF4": {
      "Properties": {
        "Description": "from RagEnginesWorkspacesDeleteDocumentDeleteDocumentFunctionSecurityGroup6310BD77:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorAuroraDatabase2A003265",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroup333F94D8",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "RagEnginesWorkspacesDeleteDocumentDeleteDocumentFunctionSecurityGroupD7C57FB7",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorAuroraDatabase2A003265",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromRagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceFunctionSecurityGroup631ABE4DIndirectPort8FC2076C": {
      "Properties": {
        "Description": "from RagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceFunctionSecurityGroup631ABE4D:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorAuroraDatabase2A003265",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroup333F94D8",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "RagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceFunctionSecurityGroup9E919F5A",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorAuroraDatabase2A003265",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "RagEnginesAuroraPgVectorAuroraDatabaseServerlessInstance42B5CDC1": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "SharedVPCisolatedSubnet1RouteTableAssociation9FA2357F",
        "SharedVPCisolatedSubnet2RouteTableAssociation61642BDD",
      ],
      "Properties": {
        "DBClusterIdentifier": {
          "Ref": "RagEnginesAuroraPgVectorAuroraDatabase2A003265",
        },
        "DBInstanceClass": "db.serverless",
        "Engine": "aurora-postgresql",
        "PromotionTier": 0,
        "PubliclyAccessible": false,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesAuroraPgVectorAuroraDatabaseSubnets038B8C27": {
      "Properties": {
        "DBSubnetGroupDescription": "Subnets for AuroraDatabase database",
        "SubnetIds": [
          {
            "Ref": "SharedVPCisolatedSubnet1SubnetAE743C40",
          },
          {
            "Ref": "SharedVPCisolatedSubnet2SubnetBC723A26",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "RagEnginesAuroraPgVectorCreateAuroraWorkspace50EFF4E7": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "RagEnginesAuroraPgVectorCreateAuroraWorkspaceRoleDefaultPolicy6BBDADB0",
        "RagEnginesAuroraPgVectorCreateAuroraWorkspaceRoleB7D93D09",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"SetCreating","States":{"SetCreating":{"Next":"Create","Type":"Task","ResultPath":null,"Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"object_type":{"S":"workspace"}},"TableName":"",
              {
                "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
              },
              "","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":statusValue":{"S":"creating"}},"UpdateExpression":"set #status=:statusValue"}},"Create":{"Next":"SetReady","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.createResult","Next":"HandleError"}],"Type":"Task","ResultPath":"$.createResult","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionEC174778",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"SetReady":{"Next":"Success","Type":"Task","ResultPath":null,"Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"object_type":{"S":"workspace"}},"TableName":"",
              {
                "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
              },
              "","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":statusValue":{"S":"ready"}},"UpdateExpression":"set #status=:statusValue"}},"Success":{"Type":"Succeed"},"HandleError":{"Next":"Fail","Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"object_type":{"S":"workspace"}},"TableName":"",
              {
                "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
              },
              "","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":error":{"S":"error"}},"UpdateExpression":"set #status = :error"}},"Fail":{"Type":"Fail","Cause":"Workspace creation failed"}},"TimeoutSeconds":300,"Comment":"Create Aurora Workspace Workflow"}",
            ],
          ],
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceSMLogGroup3134E68A",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ALL",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorCreateAuroraWorkspaceRoleB7D93D09",
            "Arn",
          ],
        },
        "TracingConfiguration": {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionEC174778": {
      "DependsOn": [
        "RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionServiceRoleDefaultPolicy2EE26FD3",
        "RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionServiceRole11C35928",
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "Architectures": [
          "x86_64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Description": "Creates Aurora workspace",
        "Environment": {
          "Variables": {
            "AURORA_DB_SECRET_ID": {
              "Ref": "RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9",
            },
            "LOG_LEVEL": "INFO",
            "POWERTOOLS_DEV": "false",
            "POWERTOOLS_LOGGER_LOG_EVENT": "true",
            "POWERTOOLS_SERVICE_NAME": "chatbot",
            "WORKSPACES_BY_OBJECT_TYPE_INDEX_NAME": "by_object_type_idx",
            "WORKSPACES_TABLE_NAME": {
              "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
            },
          },
        },
        "Handler": "index.lambda_handler",
        "Layers": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":lambda:",
                {
                  "Ref": "AWS::Region",
                },
                ":017000801446:layer:AWSLambdaPowertoolsPythonV2:46",
              ],
            ],
          },
          {
            "Ref": "SharedCommonLayerFC89CBCE",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "Role": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionServiceRole11C35928",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 300,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionSecurityGroup1A0FE458",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
            },
            {
              "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionLogRetentionD92D6B68": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionEC174778",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionSecurityGroup1A0FE458": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionF1239093",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionServiceRole11C35928": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionServiceRoleDefaultPolicy2EE26FD3": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9",
              },
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionServiceRoleDefaultPolicy2EE26FD3",
        "Roles": [
          {
            "Ref": "RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionServiceRole11C35928",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceSMLogGroup3134E68A": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesAuroraPgVectorCreateAuroraWorkspaceRoleB7D93D09": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::FindInMap": [
                    "ServiceprincipalMap",
                    {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesAuroraPgVectorCreateAuroraWorkspaceRoleDefaultPolicy6BBDADB0": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:UpdateItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    {
                      "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionEC174778",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionEC174778",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesAuroraPgVectorCreateAuroraWorkspaceRoleDefaultPolicy6BBDADB0",
        "Roles": [
          {
            "Ref": "RagEnginesAuroraPgVectorCreateAuroraWorkspaceRoleB7D93D09",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesAuroraPgVectorDatabaseSetupFunction3EAE1D9D": {
      "DependsOn": [
        "RagEnginesAuroraPgVectorDatabaseSetupFunctionServiceRoleDefaultPolicy526D1214",
        "RagEnginesAuroraPgVectorDatabaseSetupFunctionServiceRole09B67CA3",
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "Architectures": [
          "x86_64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Description": "PGVector setup",
        "Environment": {
          "Variables": {
            "LOG_LEVEL": "INFO",
            "POWERTOOLS_DEV": "false",
            "POWERTOOLS_LOGGER_LOG_EVENT": "true",
            "POWERTOOLS_SERVICE_NAME": "chatbot",
          },
        },
        "Handler": "index.lambda_handler",
        "Layers": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":lambda:",
                {
                  "Ref": "AWS::Region",
                },
                ":017000801446:layer:AWSLambdaPowertoolsPythonV2:46",
              ],
            ],
          },
          {
            "Ref": "SharedCommonLayerFC89CBCE",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "Role": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorDatabaseSetupFunctionServiceRole09B67CA3",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 300,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "RagEnginesAuroraPgVectorDatabaseSetupFunctionSecurityGroupDFD5001A",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
            },
            {
              "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "RagEnginesAuroraPgVectorDatabaseSetupFunctionLogRetention64E74D31": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "RagEnginesAuroraPgVectorDatabaseSetupFunction3EAE1D9D",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "RagEnginesAuroraPgVectorDatabaseSetupFunctionSecurityGroupDFD5001A": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function RagEnginesAuroraPgVectorDatabaseSetupFunction2E5072C4",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RagEnginesAuroraPgVectorDatabaseSetupFunctionServiceRole09B67CA3": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesAuroraPgVectorDatabaseSetupFunctionServiceRoleDefaultPolicy526D1214": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesAuroraPgVectorDatabaseSetupFunctionServiceRoleDefaultPolicy526D1214",
        "Roles": [
          {
            "Ref": "RagEnginesAuroraPgVectorDatabaseSetupFunctionServiceRole09B67CA3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEvent66CC77D0": {
      "DependsOn": [
        "RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEventServiceRoleDefaultPolicy5EC166EF",
        "RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEventServiceRoleD8C445F8",
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Description": "AWS CDK resource provider framework - onEvent (Default/RagEngines/AuroraPgVector/DatabaseSetupProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "RagEnginesAuroraPgVectorDatabaseSetupFunction3EAE1D9D",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEventServiceRoleD8C445F8",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEventSecurityGroupF05C7F01",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
            },
            {
              "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEventSecurityGroupF05C7F01": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEventF3249446",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEventServiceRoleD8C445F8": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEventServiceRoleDefaultPolicy5EC166EF": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesAuroraPgVectorDatabaseSetupFunction3EAE1D9D",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesAuroraPgVectorDatabaseSetupFunction3EAE1D9D",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEventServiceRoleDefaultPolicy5EC166EF",
        "Roles": [
          {
            "Ref": "RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEventServiceRoleD8C445F8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesAuroraPgVectorDatabaseSetupResourceCBEE6E4D": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "RagEnginesAuroraPgVectorAuroraDatabase2A003265",
        "RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9",
        "RagEnginesAuroraPgVectorAuroraDatabaseSecretBF0EF63E",
        "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromChatBotApiConstructRestApiApiSecurityGroup5956F387IndirectPort6F9024AE",
        "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromRagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionSecurityGroup90937669IndirectPortF35F96D5",
        "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromRagEnginesAuroraPgVectorDatabaseSetupFunctionSecurityGroup868747A2IndirectPort6045707A",
        "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromRagEnginesDataImportFileImportBatchJobFargateComputeEnvironmentSecurityGroupB72DF80DIndirectPort533F0865",
        "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromRagEnginesDataImportWebCrawlerBatchJobWebCrawlerFargateComputeEnvironmentSecurityGroup485782FFIndirectPort3EC7335D",
        "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromRagEnginesWorkspacesDeleteDocumentDeleteDocumentFunctionSecurityGroup6310BD77IndirectPortCDECACF4",
        "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromRagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceFunctionSecurityGroup631ABE4DIndirectPort8FC2076C",
        "RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroup333F94D8",
        "RagEnginesAuroraPgVectorAuroraDatabaseServerlessInstance42B5CDC1",
        "RagEnginesAuroraPgVectorAuroraDatabaseSubnets038B8C27",
      ],
      "Properties": {
        "AURORA_DB_SECRET_ID": {
          "Ref": "RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEvent66CC77D0",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesDataImportFileImportBatchJobFargateComputeEnvironmentA4E537F2": {
      "Properties": {
        "ComputeResources": {
          "MaxvCpus": 256,
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "RagEnginesDataImportFileImportBatchJobFargateComputeEnvironmentSecurityGroupDBC1F0DD",
                "GroupId",
              ],
            },
          ],
          "Subnets": [
            {
              "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
            },
            {
              "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
            },
          ],
          "Type": "FARGATE",
          "UpdateToLatestImageVersion": true,
        },
        "ReplaceComputeEnvironment": true,
        "State": "ENABLED",
        "Type": "managed",
        "UpdatePolicy": {
          "JobExecutionTimeoutMinutes": 30,
        },
      },
      "Type": "AWS::Batch::ComputeEnvironment",
    },
    "RagEnginesDataImportFileImportBatchJobFargateComputeEnvironmentSecurityGroupDBC1F0DD": {
      "Properties": {
        "GroupDescription": "Default/RagEngines/DataImport/FileImportBatchJob/FargateComputeEnvironment/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RagEnginesDataImportFileImportBatchJobFileImportContainerExecutionRoleDEA643AB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesDataImportFileImportBatchJobFileImportContainerExecutionRoleDefaultPolicy074B9209": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/batch/job:*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/",
                    {
                      "Fn::Sub": "cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesDataImportFileImportBatchJobFileImportContainerExecutionRoleDefaultPolicy074B9209",
        "Roles": [
          {
            "Ref": "RagEnginesDataImportFileImportBatchJobFileImportContainerExecutionRoleDEA643AB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesDataImportFileImportBatchJobFileImportJob25E94A14": {
      "Properties": {
        "ContainerProperties": {
          "Environment": [
            {
              "Name": "AWS_DEFAULT_REGION",
              "Value": {
                "Ref": "AWS::Region",
              },
            },
            {
              "Name": "CONFIG_PARAMETER_NAME",
              "Value": {
                "Ref": "SharedConfig358B4A20",
              },
            },
            {
              "Name": "API_KEYS_SECRETS_ARN",
              "Value": {
                "Ref": "SharedApiKeysSecret9EA666ED",
              },
            },
            {
              "Name": "AURORA_DB_SECRET_ID",
              "Value": {
                "Ref": "RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9",
              },
            },
            {
              "Name": "PROCESSING_BUCKET_NAME",
              "Value": {
                "Ref": "RagEnginesDataImportProcessingBucketA7BE9701",
              },
            },
            {
              "Name": "WORKSPACES_TABLE_NAME",
              "Value": {
                "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
              },
            },
            {
              "Name": "WORKSPACES_BY_OBJECT_TYPE_INDEX_NAME",
              "Value": "by_object_type_idx",
            },
            {
              "Name": "DOCUMENTS_TABLE_NAME",
              "Value": {
                "Ref": "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
              },
            },
            {
              "Name": "DOCUMENTS_BY_COMPOUND_KEY_INDEX_NAME",
              "Value": "by_compound_key_idx",
            },
            {
              "Name": "SAGEMAKER_RAG_MODELS_ENDPOINT",
              "Value": {
                "Fn::GetAtt": [
                  "RagEnginesSageMakerModelMultiAB24AEndpoint6DA7D681",
                  "EndpointName",
                ],
              },
            },
            {
              "Name": "OPEN_SEARCH_COLLECTION_ENDPOINT",
              "Value": {
                "Fn::GetAtt": [
                  "RagEnginesOpenSearchVectorOpenSearchCollection0550028F",
                  "CollectionEndpoint",
                ],
              },
            },
          ],
          "EphemeralStorage": {
            "SizeInGiB": 40,
          },
          "ExecutionRoleArn": {
            "Fn::GetAtt": [
              "RagEnginesDataImportFileImportBatchJobFileImportContainerExecutionRoleDEA643AB",
              "Arn",
            ],
          },
          "FargatePlatformConfiguration": {},
          "Image": [
            "Dummy",
          ],
          "JobRoleArn": {
            "Fn::GetAtt": [
              "RagEnginesDataImportFileImportBatchJobFileImportJobRoleCA3E6A38",
              "Arn",
            ],
          },
          "NetworkConfiguration": {
            "AssignPublicIp": "DISABLED",
          },
          "ReadonlyRootFilesystem": false,
          "ResourceRequirements": [
            {
              "Type": "MEMORY",
              "Value": "4096",
            },
            {
              "Type": "VCPU",
              "Value": "2",
            },
          ],
          "RuntimePlatform": {},
        },
        "PlatformCapabilities": [
          "FARGATE",
        ],
        "RetryStrategy": {
          "Attempts": 3,
          "EvaluateOnExit": [
            {
              "Action": "EXIT",
              "OnReason": "CannotPullContainerError:*",
            },
            {
              "Action": "EXIT",
              "OnExitCode": "137",
            },
          ],
        },
        "Timeout": {
          "AttemptDurationSeconds": 1800,
        },
        "Type": "container",
      },
      "Type": "AWS::Batch::JobDefinition",
    },
    "RagEnginesDataImportFileImportBatchJobFileImportJobRoleCA3E6A38": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Allow user freedom of model usage in Bedrock.",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Access to all log groups required for CloudWatch log group creation.",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "S3 write access required for upload and processing buckets.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesDataImportFileImportBatchJobFileImportJobRoleDefaultPolicy4484553B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportUploadBucket061D697E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportUploadBucket061D697E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportProcessingBucketA7BE9701",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportProcessingBucketA7BE9701",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/",
                    {
                      "Ref": "SharedConfig358B4A20",
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "SharedApiKeysSecret9EA666ED",
              },
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9",
              },
            },
            {
              "Action": "aoss:APIAccessAll",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RagEnginesOpenSearchVectorOpenSearchCollection0550028F",
                  "Arn",
                ],
              },
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "RagEnginesOpenSearchVectorCreateOpenSearchWorkspace2B2FCA5B",
              },
            },
            {
              "Action": "sagemaker:InvokeEndpoint",
              "Effect": "Allow",
              "Resource": {
                "Ref": "RagEnginesSageMakerModelMultiAB24AEndpoint6DA7D681",
              },
            },
            {
              "Action": [
                "bedrock:InvokeModel",
                "bedrock:InvokeModelWithResponseStream",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:bedrock:*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesDataImportFileImportBatchJobFileImportJobRoleDefaultPolicy4484553B",
        "Roles": [
          {
            "Ref": "RagEnginesDataImportFileImportBatchJobFileImportJobRoleCA3E6A38",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesDataImportFileImportBatchJobJobQueueE1C15E4F": {
      "Properties": {
        "ComputeEnvironmentOrder": [
          {
            "ComputeEnvironment": {
              "Fn::GetAtt": [
                "RagEnginesDataImportFileImportBatchJobFargateComputeEnvironmentA4E537F2",
                "ComputeEnvironmentArn",
              ],
            },
            "Order": 1,
          },
        ],
        "Priority": 1,
        "State": "ENABLED",
      },
      "Type": "AWS::Batch::JobQueue",
    },
    "RagEnginesDataImportFileImportWorkflowFileImportSMLogGroupACEA6D66": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesDataImportFileImportWorkflowFileImportStateMachine398F0217": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "RagEnginesDataImportFileImportWorkflowFileImportStateMachineRoleDefaultPolicy7FF08756",
        "RagEnginesDataImportFileImportWorkflowFileImportStateMachineRoleA0F445C3",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"SetProcessing","States":{"SetProcessing":{"Next":"FileImportJob","Type":"Task","ResultPath":null,"Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"document_id":{"S.$":"$.document_id"}},"TableName":"",
              {
                "Ref": "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
              },
              "","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":statusValue":{"S":"processing"}},"UpdateExpression":"set #status=:statusValue"}},"FileImportJob":{"Next":"SetProcessed","Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::batch:submitJob.sync","Parameters":{"JobDefinition":"",
              {
                "Ref": "RagEnginesDataImportFileImportBatchJobFileImportJob25E94A14",
              },
              "","JobName.$":"States.Format('FileImport-{}-{}', $.workspace_id, $.document_id)","JobQueue":"",
              {
                "Fn::GetAtt": [
                  "RagEnginesDataImportFileImportBatchJobJobQueueE1C15E4F",
                  "JobQueueArn",
                ],
              },
              "","ContainerOverrides":{"Environment":[{"Name":"WORKSPACE_ID","Value.$":"$.workspace_id"},{"Name":"DOCUMENT_ID","Value.$":"$.document_id"},{"Name":"INPUT_BUCKET_NAME","Value.$":"$.input_bucket_name"},{"Name":"INPUT_OBJECT_KEY","Value.$":"$.input_object_key"},{"Name":"PROCESSING_BUCKET_NAME","Value.$":"$.processing_bucket_name"},{"Name":"PROCESSING_OBJECT_KEY","Value.$":"$.processing_object_key"}]}},"ResultPath":"$.job"},"SetProcessed":{"Next":"Success","Type":"Task","ResultPath":null,"Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"document_id":{"S.$":"$.document_id"}},"TableName":"",
              {
                "Ref": "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
              },
              "","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":statusValue":{"S":"processed"}},"UpdateExpression":"set #status=:statusValue"}},"Success":{"Type":"Succeed"}},"TimeoutSeconds":43200,"Comment":"File import workflow"}",
            ],
          ],
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportFileImportWorkflowFileImportSMLogGroupACEA6D66",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ALL",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "RagEnginesDataImportFileImportWorkflowFileImportStateMachineRoleA0F445C3",
            "Arn",
          ],
        },
        "TracingConfiguration": {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesDataImportFileImportWorkflowFileImportStateMachineRoleA0F445C3": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::FindInMap": [
                    "ServiceprincipalMap",
                    {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesDataImportFileImportWorkflowFileImportStateMachineRoleDefaultPolicy7FF08756": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:UpdateItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    {
                      "Ref": "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "events:CreateRule",
                "events:PutRule",
                "events:PutTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "batch:SubmitJob",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportFileImportBatchJobJobQueueE1C15E4F",
                    "JobQueueArn",
                  ],
                },
                {
                  "Ref": "RagEnginesDataImportFileImportBatchJobFileImportJob25E94A14",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesDataImportFileImportWorkflowFileImportStateMachineRoleDefaultPolicy7FF08756",
        "Roles": [
          {
            "Ref": "RagEnginesDataImportFileImportWorkflowFileImportStateMachineRoleA0F445C3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesDataImportIngestionDeadLetterQueue4A2F3D18": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "VisibilityTimeout": 900,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesDataImportIngestionDeadLetterQueuePolicy8AACED11": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "RagEnginesDataImportIngestionDeadLetterQueue4A2F3D18",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "RagEnginesDataImportIngestionDeadLetterQueue4A2F3D18",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "RagEnginesDataImportIngestionQueue045D880F": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "RagEnginesDataImportIngestionDeadLetterQueue4A2F3D18",
              "Arn",
            ],
          },
          "maxReceiveCount": 3,
        },
        "VisibilityTimeout": 900,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesDataImportIngestionQueuePolicy0355D08F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "RagEnginesDataImportIngestionQueue045D880F",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "RagEnginesDataImportUploadBucket061D697E",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "RagEnginesDataImportIngestionQueue045D880F",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "RagEnginesDataImportIngestionQueue045D880F",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "RagEnginesDataImportProcessingBucketA7BE9701": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "RagEnginesDataImportProcessingLogsBucketB9FC694F",
          },
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesDataImportProcessingBucketAutoDeleteObjectsCustomResourceFE76D6A7": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "RagEnginesDataImportProcessingBucketPolicy87702EA3",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "RagEnginesDataImportProcessingBucketA7BE9701",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesDataImportProcessingBucketPolicy87702EA3": {
      "Properties": {
        "Bucket": {
          "Ref": "RagEnginesDataImportProcessingBucketA7BE9701",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportProcessingBucketA7BE9701",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportProcessingBucketA7BE9701",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportProcessingBucketA7BE9701",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportProcessingBucketA7BE9701",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "RagEnginesDataImportProcessingLogsBucketAutoDeleteObjectsCustomResourceB5AF8B71": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "RagEnginesDataImportProcessingLogsBucketPolicy1FE4B16D",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "RagEnginesDataImportProcessingLogsBucketB9FC694F",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesDataImportProcessingLogsBucketB9FC694F": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "Logging bucket does not require it's own access logs.",
            },
          ],
        },
      },
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesDataImportProcessingLogsBucketPolicy1FE4B16D": {
      "Properties": {
        "Bucket": {
          "Ref": "RagEnginesDataImportProcessingLogsBucketB9FC694F",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportProcessingLogsBucketB9FC694F",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportProcessingLogsBucketB9FC694F",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportProcessingLogsBucketB9FC694F",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportProcessingLogsBucketB9FC694F",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "RagEnginesDataImportRssSubscriptionCrawlQueuedRssPostsScheduleRuleAllowEventRuleRagEnginesDataImportRssSubscriptioncrawlQueuedRssPostsFunctionF6A8890A3CD34543": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RagEnginesDataImportRssSubscriptioncrawlQueuedRssPostsFunction7348FF25",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "RagEnginesDataImportRssSubscriptionCrawlQueuedRssPostsScheduleRuleD709D79A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RagEnginesDataImportRssSubscriptionCrawlQueuedRssPostsScheduleRuleD709D79A": {
      "Properties": {
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "RagEnginesDataImportRssSubscriptioncrawlQueuedRssPostsFunction7348FF25",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "RagEnginesDataImportRssSubscriptionRssIngestorC19E7D9E": {
      "DependsOn": [
        "RagEnginesDataImportRssSubscriptionRssIngestorServiceRoleDefaultPolicy2141DA1C",
        "RagEnginesDataImportRssSubscriptionRssIngestorServiceRole8A064A12",
      ],
      "Properties": {
        "Architectures": [
          "x86_64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Description": "Retrieves the latest data from the RSS Feed and adds any newly found posts to be queued for Website Crawling",
        "Environment": {
          "Variables": {
            "CONFIG_PARAMETER_NAME": {
              "Ref": "SharedConfig358B4A20",
            },
            "DOCUMENTS_BY_COMPOUND_KEY_INDEX_NAME": "by_compound_key_idx",
            "DOCUMENTS_BY_STATUS_INDEX": "by_status_idx",
            "DOCUMENTS_TABLE_NAME": {
              "Ref": "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
            },
            "LOG_LEVEL": "INFO",
            "POWERTOOLS_DEV": "false",
            "POWERTOOLS_LOGGER_LOG_EVENT": "true",
            "POWERTOOLS_SERVICE_NAME": "chatbot",
            "WORKSPACES_BY_OBJECT_TYPE_INDEX_NAME": "by_object_type_idx",
            "WORKSPACES_TABLE_NAME": {
              "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
            },
          },
        },
        "Handler": "index.lambda_handler",
        "Layers": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":lambda:",
                {
                  "Ref": "AWS::Region",
                },
                ":017000801446:layer:AWSLambdaPowertoolsPythonV2:46",
              ],
            ],
          },
          {
            "Ref": "SharedCommonLayerFC89CBCE",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "RagEnginesDataImportRssSubscriptionRssIngestorServiceRole8A064A12",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "RagEnginesDataImportRssSubscriptionRssIngestorLogRetention69A2EE38": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "RagEnginesDataImportRssSubscriptionRssIngestorC19E7D9E",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "RagEnginesDataImportRssSubscriptionRssIngestorServiceRole8A064A12": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesDataImportRssSubscriptionRssIngestorServiceRoleDefaultPolicy2141DA1C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/",
                    {
                      "Ref": "SharedConfig358B4A20",
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesDataImportRssSubscriptionRssIngestorServiceRoleDefaultPolicy2141DA1C",
        "Roles": [
          {
            "Ref": "RagEnginesDataImportRssSubscriptionRssIngestorServiceRole8A064A12",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesDataImportRssSubscriptioncrawlQueuedRssPostsFunction7348FF25": {
      "DependsOn": [
        "RagEnginesDataImportRssSubscriptioncrawlQueuedRssPostsFunctionServiceRoleDefaultPolicyBBFDEFE1",
        "RagEnginesDataImportRssSubscriptioncrawlQueuedRssPostsFunctionServiceRole7782929B",
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "Architectures": [
          "x86_64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Description": "Functions polls the RSS items for pending urls and invokes Website crawler inference. Max of 10 URLs per invoke.",
        "Environment": {
          "Variables": {
            "CONFIG_PARAMETER_NAME": {
              "Ref": "SharedConfig358B4A20",
            },
            "DOCUMENTS_BY_COMPOUND_KEY_INDEX_NAME": "by_compound_key_idx",
            "DOCUMENTS_BY_STATUS_INDEX": "by_status_idx",
            "DOCUMENTS_TABLE_NAME": {
              "Ref": "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
            },
            "LOG_LEVEL": "INFO",
            "POWERTOOLS_DEV": "false",
            "POWERTOOLS_LOGGER_LOG_EVENT": "true",
            "POWERTOOLS_SERVICE_NAME": "chatbot",
            "PROCESSING_BUCKET_NAME": {
              "Ref": "RagEnginesDataImportProcessingBucketA7BE9701",
            },
            "WEBSITE_CRAWLING_WORKFLOW_ARN": {
              "Ref": "RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawling9B1CEC96",
            },
            "WORKSPACES_BY_OBJECT_TYPE_INDEX_NAME": "by_object_type_idx",
            "WORKSPACES_TABLE_NAME": {
              "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
            },
          },
        },
        "Handler": "index.lambda_handler",
        "Layers": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":lambda:",
                {
                  "Ref": "AWS::Region",
                },
                ":017000801446:layer:AWSLambdaPowertoolsPythonV2:46",
              ],
            ],
          },
          {
            "Ref": "SharedCommonLayerFC89CBCE",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "RagEnginesDataImportRssSubscriptioncrawlQueuedRssPostsFunctionServiceRole7782929B",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 300,
        "TracingConfig": {
          "Mode": "Active",
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "RagEnginesDataImportRssSubscriptioncrawlQueuedRssPostsFunctionSecurityGroupF06E23E0",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
            },
            {
              "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "RagEnginesDataImportRssSubscriptioncrawlQueuedRssPostsFunctionLogRetention98BE58FB": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "RagEnginesDataImportRssSubscriptioncrawlQueuedRssPostsFunction7348FF25",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "RagEnginesDataImportRssSubscriptioncrawlQueuedRssPostsFunctionSecurityGroupF06E23E0": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function RagEnginesDataImportRssSubscriptioncrawlQueuedRssPostsFunctionF6A8890A",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RagEnginesDataImportRssSubscriptioncrawlQueuedRssPostsFunctionServiceRole7782929B": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesDataImportRssSubscriptioncrawlQueuedRssPostsFunctionServiceRoleDefaultPolicyBBFDEFE1": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportProcessingBucketA7BE9701",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportProcessingBucketA7BE9701",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawling9B1CEC96",
              },
            },
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/",
                    {
                      "Ref": "SharedConfig358B4A20",
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesDataImportRssSubscriptioncrawlQueuedRssPostsFunctionServiceRoleDefaultPolicyBBFDEFE1",
        "Roles": [
          {
            "Ref": "RagEnginesDataImportRssSubscriptioncrawlQueuedRssPostsFunctionServiceRole7782929B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesDataImportRssSubscriptiontriggerRssIngestorsFunctionE7A345BB": {
      "DependsOn": [
        "RagEnginesDataImportRssSubscriptiontriggerRssIngestorsFunctionServiceRoleDefaultPolicy1C632A18",
        "RagEnginesDataImportRssSubscriptiontriggerRssIngestorsFunctionServiceRoleC2E17ECB",
      ],
      "Properties": {
        "Architectures": [
          "x86_64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Description": "Invokes RSS Feed Ingestors for each Subscribed RSS Feed",
        "Environment": {
          "Variables": {
            "CONFIG_PARAMETER_NAME": {
              "Ref": "SharedConfig358B4A20",
            },
            "DOCUMENTS_BY_COMPOUND_KEY_INDEX_NAME": "by_compound_key_idx",
            "DOCUMENTS_BY_STATUS_INDEX": "by_status_idx",
            "DOCUMENTS_TABLE_NAME": {
              "Ref": "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
            },
            "LOG_LEVEL": "INFO",
            "POWERTOOLS_DEV": "false",
            "POWERTOOLS_LOGGER_LOG_EVENT": "true",
            "POWERTOOLS_SERVICE_NAME": "chatbot",
            "PROCESSING_BUCKET_NAME": {
              "Ref": "RagEnginesDataImportProcessingBucketA7BE9701",
            },
            "RSS_FEED_INGESTOR_FUNCTION": {
              "Ref": "RagEnginesDataImportRssSubscriptionRssIngestorC19E7D9E",
            },
            "WORKSPACES_BY_OBJECT_TYPE_INDEX_NAME": "by_object_type_idx",
            "WORKSPACES_TABLE_NAME": {
              "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
            },
          },
        },
        "Handler": "index.lambda_handler",
        "Layers": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":lambda:",
                {
                  "Ref": "AWS::Region",
                },
                ":017000801446:layer:AWSLambdaPowertoolsPythonV2:46",
              ],
            ],
          },
          {
            "Ref": "SharedCommonLayerFC89CBCE",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "RagEnginesDataImportRssSubscriptiontriggerRssIngestorsFunctionServiceRoleC2E17ECB",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 15,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "RagEnginesDataImportRssSubscriptiontriggerRssIngestorsFunctionLogRetention44AB99B1": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "RagEnginesDataImportRssSubscriptiontriggerRssIngestorsFunctionE7A345BB",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "RagEnginesDataImportRssSubscriptiontriggerRssIngestorsFunctionScheduleAllowEventRuleRagEnginesDataImportRssSubscriptiontriggerRssIngestorsFunction6A310B06F460AACD": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RagEnginesDataImportRssSubscriptiontriggerRssIngestorsFunctionE7A345BB",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "RagEnginesDataImportRssSubscriptiontriggerRssIngestorsFunctionScheduleD95D884A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RagEnginesDataImportRssSubscriptiontriggerRssIngestorsFunctionScheduleD95D884A": {
      "Properties": {
        "ScheduleExpression": "rate(15 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "RagEnginesDataImportRssSubscriptiontriggerRssIngestorsFunctionE7A345BB",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "RagEnginesDataImportRssSubscriptiontriggerRssIngestorsFunctionServiceRoleC2E17ECB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesDataImportRssSubscriptiontriggerRssIngestorsFunctionServiceRoleDefaultPolicy1C632A18": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportRssSubscriptionRssIngestorC19E7D9E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportRssSubscriptionRssIngestorC19E7D9E",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/",
                    {
                      "Ref": "SharedConfig358B4A20",
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesDataImportRssSubscriptiontriggerRssIngestorsFunctionServiceRoleDefaultPolicy1C632A18",
        "Roles": [
          {
            "Ref": "RagEnginesDataImportRssSubscriptiontriggerRssIngestorsFunctionServiceRoleC2E17ECB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesDataImportUploadBucket061D697E": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AccelerateConfiguration": {
          "AccelerationStatus": "Enabled",
        },
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*",
              ],
              "AllowedMethods": [
                "PUT",
                "POST",
                "GET",
                "HEAD",
              ],
              "AllowedOrigins": [
                "*",
              ],
              "ExposedHeaders": [
                "ETag",
              ],
              "MaxAge": 3000,
            },
          ],
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "RagEnginesDataImportUploadLogsBucket7D4429F7",
          },
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesDataImportUploadBucketAutoDeleteObjectsCustomResource501512BA": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "RagEnginesDataImportUploadBucketPolicy05639444",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "RagEnginesDataImportUploadBucket061D697E",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesDataImportUploadBucketNotificationsBC145677": {
      "DependsOn": [
        "RagEnginesDataImportIngestionQueuePolicy0355D08F",
        "RagEnginesDataImportIngestionQueue045D880F",
        "RagEnginesDataImportUploadBucketPolicy05639444",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "RagEnginesDataImportUploadBucket061D697E",
        },
        "Managed": true,
        "NotificationConfiguration": {
          "QueueConfigurations": [
            {
              "Events": [
                "s3:ObjectCreated:*",
              ],
              "QueueArn": {
                "Fn::GetAtt": [
                  "RagEnginesDataImportIngestionQueue045D880F",
                  "Arn",
                ],
              },
            },
            {
              "Events": [
                "s3:ObjectRemoved:*",
              ],
              "QueueArn": {
                "Fn::GetAtt": [
                  "RagEnginesDataImportIngestionQueue045D880F",
                  "Arn",
                ],
              },
            },
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3BucketNotifications",
    },
    "RagEnginesDataImportUploadBucketPolicy05639444": {
      "Properties": {
        "Bucket": {
          "Ref": "RagEnginesDataImportUploadBucket061D697E",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportUploadBucket061D697E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportUploadBucket061D697E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportUploadBucket061D697E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportUploadBucket061D697E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "RagEnginesDataImportUploadHandlerDB43C77C": {
      "DependsOn": [
        "RagEnginesDataImportUploadHandlerServiceRoleDefaultPolicyEA26DE3E",
        "RagEnginesDataImportUploadHandlerServiceRole46EB8689",
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "Architectures": [
          "x86_64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Description": "Data Import upload handler",
        "Environment": {
          "Variables": {
            "API_KEYS_SECRETS_ARN": {
              "Ref": "SharedApiKeysSecret9EA666ED",
            },
            "CONFIG_PARAMETER_NAME": {
              "Ref": "SharedConfig358B4A20",
            },
            "DEFAULT_KENDRA_S3_DATA_SOURCE_BUCKET_NAME": {
              "Ref": "RagEnginesKendraRetrievalKendraDataBucket1627A447",
            },
            "DOCUMENTS_BY_COMPOUND_KEY_INDEX_NAME": "by_compound_key_idx",
            "DOCUMENTS_TABLE_NAME": {
              "Ref": "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
            },
            "FILE_IMPORT_WORKFLOW_ARN": {
              "Ref": "RagEnginesDataImportFileImportWorkflowFileImportStateMachine398F0217",
            },
            "LOG_LEVEL": "INFO",
            "POWERTOOLS_DEV": "false",
            "POWERTOOLS_LOGGER_LOG_EVENT": "true",
            "POWERTOOLS_SERVICE_NAME": "chatbot",
            "PROCESSING_BUCKET_NAME": {
              "Ref": "RagEnginesDataImportProcessingBucketA7BE9701",
            },
            "SAGEMAKER_RAG_MODELS_ENDPOINT": {
              "Fn::GetAtt": [
                "RagEnginesSageMakerModelMultiAB24AEndpoint6DA7D681",
                "EndpointName",
              ],
            },
            "UPLOAD_BUCKET_NAME": {
              "Ref": "RagEnginesDataImportUploadBucket061D697E",
            },
            "WORKSPACES_BY_OBJECT_TYPE_INDEX_NAME": "by_object_type_idx",
            "WORKSPACES_TABLE_NAME": {
              "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
            },
          },
        },
        "Handler": "index.lambda_handler",
        "Layers": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":lambda:",
                {
                  "Ref": "AWS::Region",
                },
                ":017000801446:layer:AWSLambdaPowertoolsPythonV2:46",
              ],
            ],
          },
          {
            "Ref": "SharedCommonLayerFC89CBCE",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "RagEnginesDataImportUploadHandlerServiceRole46EB8689",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active",
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "RagEnginesDataImportUploadHandlerSecurityGroupE50D6894",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
            },
            {
              "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "RagEnginesDataImportUploadHandlerLogRetention21BCC790": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "RagEnginesDataImportUploadHandlerDB43C77C",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "RagEnginesDataImportUploadHandlerSecurityGroupE50D6894": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function RagEnginesDataImportUploadHandler5B6E6452",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RagEnginesDataImportUploadHandlerServiceRole46EB8689": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesDataImportUploadHandlerServiceRoleDefaultPolicyEA26DE3E": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportUploadBucket061D697E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportUploadBucket061D697E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportProcessingBucketA7BE9701",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportProcessingBucketA7BE9701",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "SharedApiKeysSecret9EA666ED",
              },
            },
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/",
                    {
                      "Ref": "SharedConfig358B4A20",
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesKendraRetrievalKendraDataBucket1627A447",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesKendraRetrievalKendraDataBucket1627A447",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RagEnginesDataImportIngestionQueue045D880F",
                  "Arn",
                ],
              },
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "RagEnginesDataImportFileImportWorkflowFileImportStateMachine398F0217",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesDataImportUploadHandlerServiceRoleDefaultPolicyEA26DE3E",
        "Roles": [
          {
            "Ref": "RagEnginesDataImportUploadHandlerServiceRole46EB8689",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesDataImportUploadHandlerSqsEventSourceRagEnginesDataImportIngestionQueue0FE3E63F7766600B": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "EventSourceArn": {
          "Fn::GetAtt": [
            "RagEnginesDataImportIngestionQueue045D880F",
            "Arn",
          ],
        },
        "FunctionName": {
          "Ref": "RagEnginesDataImportUploadHandlerDB43C77C",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "RagEnginesDataImportUploadLogsBucket7D4429F7": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "Logging bucket does not require it's own access logs.",
            },
          ],
        },
      },
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesDataImportUploadLogsBucketAutoDeleteObjectsCustomResource7130792D": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "RagEnginesDataImportUploadLogsBucketPolicy11C555A1",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "RagEnginesDataImportUploadLogsBucket7D4429F7",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesDataImportUploadLogsBucketPolicy11C555A1": {
      "Properties": {
        "Bucket": {
          "Ref": "RagEnginesDataImportUploadLogsBucket7D4429F7",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportUploadLogsBucket7D4429F7",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportUploadLogsBucket7D4429F7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportUploadLogsBucket7D4429F7",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportUploadLogsBucket7D4429F7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "RagEnginesDataImportWebCrawlerBatchJobWebCrawlerContainerExecutionRole0B78E7F9": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesDataImportWebCrawlerBatchJobWebCrawlerContainerExecutionRoleDefaultPolicy0236B6D1": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/batch/job:*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/",
                    {
                      "Fn::Sub": "cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesDataImportWebCrawlerBatchJobWebCrawlerContainerExecutionRoleDefaultPolicy0236B6D1",
        "Roles": [
          {
            "Ref": "RagEnginesDataImportWebCrawlerBatchJobWebCrawlerContainerExecutionRole0B78E7F9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesDataImportWebCrawlerBatchJobWebCrawlerFargateComputeEnvironmentC972B00C": {
      "Properties": {
        "ComputeResources": {
          "MaxvCpus": 256,
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "RagEnginesDataImportWebCrawlerBatchJobWebCrawlerFargateComputeEnvironmentSecurityGroup1141A545",
                "GroupId",
              ],
            },
          ],
          "Subnets": [
            {
              "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
            },
            {
              "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
            },
          ],
          "Type": "FARGATE",
          "UpdateToLatestImageVersion": true,
        },
        "ReplaceComputeEnvironment": true,
        "State": "ENABLED",
        "Type": "managed",
        "UpdatePolicy": {
          "JobExecutionTimeoutMinutes": 30,
        },
      },
      "Type": "AWS::Batch::ComputeEnvironment",
    },
    "RagEnginesDataImportWebCrawlerBatchJobWebCrawlerFargateComputeEnvironmentSecurityGroup1141A545": {
      "Properties": {
        "GroupDescription": "Default/RagEngines/DataImport/WebCrawlerBatchJob/WebCrawlerFargateComputeEnvironment/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RagEnginesDataImportWebCrawlerBatchJobWebCrawlerJobDC22C303": {
      "Properties": {
        "ContainerProperties": {
          "Environment": [
            {
              "Name": "AWS_DEFAULT_REGION",
              "Value": {
                "Ref": "AWS::Region",
              },
            },
            {
              "Name": "CONFIG_PARAMETER_NAME",
              "Value": {
                "Ref": "SharedConfig358B4A20",
              },
            },
            {
              "Name": "API_KEYS_SECRETS_ARN",
              "Value": {
                "Ref": "SharedApiKeysSecret9EA666ED",
              },
            },
            {
              "Name": "AURORA_DB_SECRET_ID",
              "Value": {
                "Ref": "RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9",
              },
            },
            {
              "Name": "PROCESSING_BUCKET_NAME",
              "Value": {
                "Ref": "RagEnginesDataImportProcessingBucketA7BE9701",
              },
            },
            {
              "Name": "WORKSPACES_TABLE_NAME",
              "Value": {
                "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
              },
            },
            {
              "Name": "WORKSPACES_BY_OBJECT_TYPE_INDEX_NAME",
              "Value": "by_object_type_idx",
            },
            {
              "Name": "DOCUMENTS_TABLE_NAME",
              "Value": {
                "Ref": "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
              },
            },
            {
              "Name": "DOCUMENTS_BY_COMPOUND_KEY_INDEX_NAME",
              "Value": "by_compound_key_idx",
            },
            {
              "Name": "SAGEMAKER_RAG_MODELS_ENDPOINT",
              "Value": {
                "Fn::GetAtt": [
                  "RagEnginesSageMakerModelMultiAB24AEndpoint6DA7D681",
                  "EndpointName",
                ],
              },
            },
            {
              "Name": "OPEN_SEARCH_COLLECTION_ENDPOINT",
              "Value": {
                "Fn::GetAtt": [
                  "RagEnginesOpenSearchVectorOpenSearchCollection0550028F",
                  "CollectionEndpoint",
                ],
              },
            },
          ],
          "ExecutionRoleArn": {
            "Fn::GetAtt": [
              "RagEnginesDataImportWebCrawlerBatchJobWebCrawlerContainerExecutionRole0B78E7F9",
              "Arn",
            ],
          },
          "FargatePlatformConfiguration": {},
          "Image": [
            "Dummy",
          ],
          "JobRoleArn": {
            "Fn::GetAtt": [
              "RagEnginesDataImportWebCrawlerBatchJobWebCrawlerJobRoleE84A3DDA",
              "Arn",
            ],
          },
          "NetworkConfiguration": {
            "AssignPublicIp": "DISABLED",
          },
          "ReadonlyRootFilesystem": false,
          "ResourceRequirements": [
            {
              "Type": "MEMORY",
              "Value": "4096",
            },
            {
              "Type": "VCPU",
              "Value": "2",
            },
          ],
          "RuntimePlatform": {},
        },
        "PlatformCapabilities": [
          "FARGATE",
        ],
        "RetryStrategy": {
          "Attempts": 3,
          "EvaluateOnExit": [
            {
              "Action": "EXIT",
              "OnReason": "CannotPullContainerError:*",
            },
            {
              "Action": "EXIT",
              "OnExitCode": "137",
            },
          ],
        },
        "Timeout": {},
        "Type": "container",
      },
      "Type": "AWS::Batch::JobDefinition",
    },
    "RagEnginesDataImportWebCrawlerBatchJobWebCrawlerJobQueue9A451612": {
      "Properties": {
        "ComputeEnvironmentOrder": [
          {
            "ComputeEnvironment": {
              "Fn::GetAtt": [
                "RagEnginesDataImportWebCrawlerBatchJobWebCrawlerFargateComputeEnvironmentC972B00C",
                "ComputeEnvironmentArn",
              ],
            },
            "Order": 1,
          },
        ],
        "Priority": 1,
        "State": "ENABLED",
      },
      "Type": "AWS::Batch::JobQueue",
    },
    "RagEnginesDataImportWebCrawlerBatchJobWebCrawlerJobRoleDefaultPolicy12DFD49F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportUploadBucket061D697E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportUploadBucket061D697E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportProcessingBucketA7BE9701",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportProcessingBucketA7BE9701",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/",
                    {
                      "Ref": "SharedConfig358B4A20",
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "SharedApiKeysSecret9EA666ED",
              },
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9",
              },
            },
            {
              "Action": "aoss:APIAccessAll",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RagEnginesOpenSearchVectorOpenSearchCollection0550028F",
                  "Arn",
                ],
              },
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "RagEnginesOpenSearchVectorCreateOpenSearchWorkspace2B2FCA5B",
              },
            },
            {
              "Action": "sagemaker:InvokeEndpoint",
              "Effect": "Allow",
              "Resource": {
                "Ref": "RagEnginesSageMakerModelMultiAB24AEndpoint6DA7D681",
              },
            },
            {
              "Action": [
                "bedrock:InvokeModel",
                "bedrock:InvokeModelWithResponseStream",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:bedrock:*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesDataImportWebCrawlerBatchJobWebCrawlerJobRoleDefaultPolicy12DFD49F",
        "Roles": [
          {
            "Ref": "RagEnginesDataImportWebCrawlerBatchJobWebCrawlerJobRoleE84A3DDA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesDataImportWebCrawlerBatchJobWebCrawlerJobRoleE84A3DDA": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Allow user freedom of model usage in Bedrock.",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Access to all log groups required for CloudWatch log group creation.",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "S3 write access required for upload and processing buckets.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawling9B1CEC96": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawlingRoleDefaultPolicyA5C332A2",
        "RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawlingRole749B2009",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"SetProcessing","States":{"SetProcessing":{"Next":"WebCrawlerJob","Type":"Task","ResultPath":null,"Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"document_id":{"S.$":"$.document_id"}},"TableName":"",
              {
                "Ref": "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
              },
              "","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":statusValue":{"S":"processing"}},"UpdateExpression":"set #status=:statusValue"}},"WebCrawlerJob":{"Next":"SetProcessed","Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::batch:submitJob.sync","Parameters":{"JobDefinition":"",
              {
                "Ref": "RagEnginesDataImportWebCrawlerBatchJobWebCrawlerJobDC22C303",
              },
              "","JobName.$":"States.Format('WebCrawler-{}-{}', $.workspace_id, $.document_id)","JobQueue":"",
              {
                "Fn::GetAtt": [
                  "RagEnginesDataImportWebCrawlerBatchJobWebCrawlerJobQueue9A451612",
                  "JobQueueArn",
                ],
              },
              "","ContainerOverrides":{"Environment":[{"Name":"WORKSPACE_ID","Value.$":"$.workspace_id"},{"Name":"DOCUMENT_ID","Value.$":"$.document_id"},{"Name":"INPUT_BUCKET_NAME","Value.$":"$.bucket_name"},{"Name":"INPUT_OBJECT_KEY","Value.$":"$.object_key"}]}},"ResultPath":"$.job","Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.job","Next":"HandleError"}]},"SetProcessed":{"Next":"Success","Type":"Task","ResultPath":null,"Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"document_id":{"S.$":"$.document_id"}},"TableName":"",
              {
                "Ref": "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
              },
              "","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":statusValue":{"S":"processed"}},"UpdateExpression":"set #status=:statusValue"}},"Success":{"Type":"Succeed"},"HandleError":{"Next":"Fail","Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"document_id":{"S.$":"$.document_id"}},"TableName":"",
              {
                "Ref": "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
              },
              "","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":error":{"S":"error"}},"UpdateExpression":"set #status = :error"}},"Fail":{"Type":"Fail","Cause":"Crawler failed"}},"Comment":"Website Crawling Workflow"}",
            ],
          ],
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawlingSMLogGroup0C0F0231",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ALL",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawlingRole749B2009",
            "Arn",
          ],
        },
        "TracingConfiguration": {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawlingRole749B2009": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::FindInMap": [
                    "ServiceprincipalMap",
                    {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawlingRoleDefaultPolicyA5C332A2": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:UpdateItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    {
                      "Ref": "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "events:CreateRule",
                "events:PutRule",
                "events:PutTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "batch:SubmitJob",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportWebCrawlerBatchJobWebCrawlerJobQueue9A451612",
                    "JobQueueArn",
                  ],
                },
                {
                  "Ref": "RagEnginesDataImportWebCrawlerBatchJobWebCrawlerJobDC22C303",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawlingRoleDefaultPolicyA5C332A2",
        "Roles": [
          {
            "Ref": "RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawlingRole749B2009",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawlingSMLogGroup0C0F0231": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesKendraRetrievalCreateKendraWorkspace5D8DE7EF": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "RagEnginesKendraRetrievalCreateKendraWorkspaceRoleDefaultPolicy9D33E30B",
        "RagEnginesKendraRetrievalCreateKendraWorkspaceRole3E074B64",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"SetCreating","States":{"SetCreating":{"Next":"SetReady","Type":"Task","ResultPath":null,"Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"object_type":{"S":"workspace"}},"TableName":"",
              {
                "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
              },
              "","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":statusValue":{"S":"creating"}},"UpdateExpression":"set #status=:statusValue"}},"SetReady":{"Next":"Success","Type":"Task","ResultPath":null,"Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"object_type":{"S":"workspace"}},"TableName":"",
              {
                "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
              },
              "","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":statusValue":{"S":"ready"}},"UpdateExpression":"set #status=:statusValue"}},"Success":{"Type":"Succeed"}},"TimeoutSeconds":300,"Comment":"Create Kendra Workspace Workflow"}",
            ],
          ],
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "RagEnginesKendraRetrievalCreateKendraWorkspaceCreateKendraWorkspaceSMLogGroupC9D4A635",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ALL",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "RagEnginesKendraRetrievalCreateKendraWorkspaceRole3E074B64",
            "Arn",
          ],
        },
        "TracingConfiguration": {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesKendraRetrievalCreateKendraWorkspaceCreateKendraWorkspaceSMLogGroupC9D4A635": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesKendraRetrievalCreateKendraWorkspaceRole3E074B64": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::FindInMap": [
                    "ServiceprincipalMap",
                    {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesKendraRetrievalCreateKendraWorkspaceRoleDefaultPolicy9D33E30B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:UpdateItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    {
                      "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesKendraRetrievalCreateKendraWorkspaceRoleDefaultPolicy9D33E30B",
        "Roles": [
          {
            "Ref": "RagEnginesKendraRetrievalCreateKendraWorkspaceRole3E074B64",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesKendraRetrievalIndex922B65FC": {
      "Properties": {
        "DocumentMetadataConfigurations": [
          {
            "Name": "workspace_id",
            "Search": {
              "Displayable": true,
              "Facetable": true,
              "Searchable": true,
            },
            "Type": "STRING_VALUE",
          },
          {
            "Name": "document_type",
            "Search": {
              "Displayable": true,
              "Facetable": true,
              "Searchable": true,
            },
            "Type": "STRING_VALUE",
          },
        ],
        "Edition": "ENTERPRISE_EDITION",
        "Name": "prefix-genaichatbot-workspac",
        "RoleArn": {
          "Fn::GetAtt": [
            "RagEnginesKendraRetrievalKendraRole162540DA",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Kendra::Index",
    },
    "RagEnginesKendraRetrievalKendraDataBucket1627A447": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "RagEnginesKendraRetrievalLogsBucket7EEBA031",
          },
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesKendraRetrievalKendraDataBucketAutoDeleteObjectsCustomResourceD149C5A7": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "RagEnginesKendraRetrievalKendraDataBucketPolicy712A21F8",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "RagEnginesKendraRetrievalKendraDataBucket1627A447",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesKendraRetrievalKendraDataBucketPolicy712A21F8": {
      "Properties": {
        "Bucket": {
          "Ref": "RagEnginesKendraRetrievalKendraDataBucket1627A447",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesKendraRetrievalKendraDataBucket1627A447",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesKendraRetrievalKendraDataBucket1627A447",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesKendraRetrievalKendraDataBucket1627A447",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesKendraRetrievalKendraDataBucket1627A447",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "RagEnginesKendraRetrievalKendraRole162540DA": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "kendra.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesKendraRetrievalKendraRoleDefaultPolicy7F00A915": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:*",
                "cloudwatch:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesKendraRetrievalKendraDataBucket1627A447",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesKendraRetrievalKendraDataBucket1627A447",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "kendra:BatchDeleteDocument",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesKendraRetrievalIndex922B65FC",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "RagEnginesKendraRetrievalKendraS3DataSourceF4400C3D",
                    "Arn",
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesKendraRetrievalKendraRoleDefaultPolicy7F00A915",
        "Roles": [
          {
            "Ref": "RagEnginesKendraRetrievalKendraRole162540DA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesKendraRetrievalKendraS3DataSourceF4400C3D": {
      "Properties": {
        "DataSourceConfiguration": {
          "S3Configuration": {
            "BucketName": {
              "Ref": "RagEnginesKendraRetrievalKendraDataBucket1627A447",
            },
            "DocumentsMetadataConfiguration": {
              "S3Prefix": "metadata",
            },
            "InclusionPrefixes": [
              "documents",
            ],
          },
        },
        "Description": "S3 Data Source for Kendra Index",
        "IndexId": {
          "Ref": "RagEnginesKendraRetrievalIndex922B65FC",
        },
        "Name": "KendraS3DataSource",
        "RoleArn": {
          "Fn::GetAtt": [
            "RagEnginesKendraRetrievalKendraRole162540DA",
            "Arn",
          ],
        },
        "Type": "S3",
      },
      "Type": "AWS::Kendra::DataSource",
    },
    "RagEnginesKendraRetrievalLogsBucket7EEBA031": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesKendraRetrievalLogsBucketAutoDeleteObjectsCustomResource65BEA9C5": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "RagEnginesKendraRetrievalLogsBucketPolicy0F92CE93",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "RagEnginesKendraRetrievalLogsBucket7EEBA031",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesKendraRetrievalLogsBucketPolicy0F92CE93": {
      "Properties": {
        "Bucket": {
          "Ref": "RagEnginesKendraRetrievalLogsBucket7EEBA031",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesKendraRetrievalLogsBucket7EEBA031",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesKendraRetrievalLogsBucket7EEBA031",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesKendraRetrievalLogsBucket7EEBA031",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesKendraRetrievalLogsBucket7EEBA031",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "RagEnginesOpenSearchVectorAccessPolicycreateworkflowCF675858": {
      "Properties": {
        "Name": "prefix-create-workflow-access-po",
        "Policy": {
          "Fn::Join": [
            "",
            [
              "[{"Rules":[{"ResourceType":"index","Resource":["index/prefix-genaichatbot-workspac/*"],"Permission":["aoss:CreateIndex","aoss:DeleteIndex","aoss:UpdateIndex","aoss:DescribeIndex"]}],"Principal":["",
              {
                "Fn::GetAtt": [
                  "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceCreateOpenSearchWorkspaceFunctionServiceRole61F3024C",
                  "Arn",
                ],
              },
              ""]}]",
            ],
          ],
        },
        "Type": "data",
      },
      "Type": "AWS::OpenSearchServerless::AccessPolicy",
    },
    "RagEnginesOpenSearchVectorAccessPolicydeletedocumentE38B92A9": {
      "Properties": {
        "Name": "prefix-delete-document-access-po",
        "Policy": {
          "Fn::Join": [
            "",
            [
              "[{"Rules":[{"ResourceType":"index","Resource":["index/prefix-genaichatbot-workspac/*"],"Permission":["aoss:DescribeIndex","aoss:UpdateIndex","aoss:ReadDocument","aoss:WriteDocument"]}],"Principal":["",
              {
                "Fn::GetAtt": [
                  "RagEnginesWorkspacesDeleteDocumentDeleteDocumentFunctionServiceRole3BBCBEE9",
                  "Arn",
                ],
              },
              ""]}]",
            ],
          ],
        },
        "Type": "data",
      },
      "Type": "AWS::OpenSearchServerless::AccessPolicy",
    },
    "RagEnginesOpenSearchVectorAccessPolicydeleteworkspaceB7671EBB": {
      "Properties": {
        "Name": "prefix-delete-workspace-access-p",
        "Policy": {
          "Fn::Join": [
            "",
            [
              "[{"Rules":[{"ResourceType":"index","Resource":["index/prefix-genaichatbot-workspac/*"],"Permission":["aoss:DeleteIndex","aoss:DescribeIndex","aoss:ReadDocument","aoss:WriteDocument"]}],"Principal":["",
              {
                "Fn::GetAtt": [
                  "RagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceFunctionServiceRoleD99F8BAF",
                  "Arn",
                ],
              },
              ""]}]",
            ],
          ],
        },
        "Type": "data",
      },
      "Type": "AWS::OpenSearchServerless::AccessPolicy",
    },
    "RagEnginesOpenSearchVectorAccessPolicyfileimportjob36E505CB": {
      "Properties": {
        "Name": "prefix-file-import-job-access-po",
        "Policy": {
          "Fn::Join": [
            "",
            [
              "[{"Rules":[{"ResourceType":"index","Resource":["index/prefix-genaichatbot-workspac/*"],"Permission":["aoss:DescribeIndex","aoss:ReadDocument","aoss:WriteDocument"]}],"Principal":["",
              {
                "Fn::GetAtt": [
                  "RagEnginesDataImportFileImportBatchJobFileImportJobRoleCA3E6A38",
                  "Arn",
                ],
              },
              ""]}]",
            ],
          ],
        },
        "Type": "data",
      },
      "Type": "AWS::OpenSearchServerless::AccessPolicy",
    },
    "RagEnginesOpenSearchVectorAccessPolicygraphqlapi1D6DC8C2": {
      "Properties": {
        "Name": "prefix-graphql-api-access-policy",
        "Policy": {
          "Fn::Join": [
            "",
            [
              "[{"Rules":[{"ResourceType":"index","Resource":["index/prefix-genaichatbot-workspac/*"],"Permission":["aoss:DescribeIndex","aoss:ReadDocument","aoss:WriteDocument"]}],"Principal":["",
              {
                "Fn::GetAtt": [
                  "ChatBotApiConstructRestApiGraphQLApiHandlerServiceRole94ABDD64",
                  "Arn",
                ],
              },
              ""]}]",
            ],
          ],
        },
        "Type": "data",
      },
      "Type": "AWS::OpenSearchServerless::AccessPolicy",
    },
    "RagEnginesOpenSearchVectorAccessPolicywebcrawlerjobBB1BFE70": {
      "Properties": {
        "Name": "prefix-web-crawler-job-access-po",
        "Policy": {
          "Fn::Join": [
            "",
            [
              "[{"Rules":[{"ResourceType":"index","Resource":["index/prefix-genaichatbot-workspac/*"],"Permission":["aoss:DescribeIndex","aoss:ReadDocument","aoss:WriteDocument"]}],"Principal":["",
              {
                "Fn::GetAtt": [
                  "RagEnginesDataImportWebCrawlerBatchJobWebCrawlerJobRoleE84A3DDA",
                  "Arn",
                ],
              },
              ""]}]",
            ],
          ],
        },
        "Type": "data",
      },
      "Type": "AWS::OpenSearchServerless::AccessPolicy",
    },
    "RagEnginesOpenSearchVectorCreateOpenSearchWorkspace2B2FCA5B": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceRoleDefaultPolicyDF1E8530",
        "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceRole11F40159",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"SetCreating","States":{"SetCreating":{"Next":"Create","Type":"Task","ResultPath":null,"Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"object_type":{"S":"workspace"}},"TableName":"",
              {
                "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
              },
              "","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":statusValue":{"S":"creating"}},"UpdateExpression":"set #status=:statusValue"}},"Create":{"Next":"SetReady","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.createResult","Next":"HandleError"}],"Type":"Task","ResultPath":"$.createResult","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceCreateOpenSearchWorkspaceFunction8E852192",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"SetReady":{"Next":"Success","Type":"Task","ResultPath":null,"Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"object_type":{"S":"workspace"}},"TableName":"",
              {
                "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
              },
              "","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":statusValue":{"S":"ready"}},"UpdateExpression":"set #status=:statusValue"}},"Success":{"Type":"Succeed"},"HandleError":{"Next":"Fail","Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"object_type":{"S":"workspace"}},"TableName":"",
              {
                "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
              },
              "","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":error":{"S":"error"}},"UpdateExpression":"set #status = :error"}},"Fail":{"Type":"Fail","Cause":"Workspace creation failed"}},"TimeoutSeconds":300,"Comment":"Create OpenSearch Workspace Workflow"}",
            ],
          ],
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceCreateOpenSearchWorkspaceSMLogGroupB97A0992",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ALL",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceRole11F40159",
            "Arn",
          ],
        },
        "TracingConfiguration": {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceCreateOpenSearchWorkspaceFunction8E852192": {
      "DependsOn": [
        "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceCreateOpenSearchWorkspaceFunctionServiceRoleDefaultPolicy8B8E4375",
        "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceCreateOpenSearchWorkspaceFunctionServiceRole61F3024C",
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "Architectures": [
          "x86_64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Description": "Creates the Open Search workspace",
        "Environment": {
          "Variables": {
            "LOG_LEVEL": "INFO",
            "OPEN_SEARCH_COLLECTION_ENDPOINT": {
              "Fn::GetAtt": [
                "RagEnginesOpenSearchVectorOpenSearchCollection0550028F",
                "CollectionEndpoint",
              ],
            },
            "OPEN_SEARCH_COLLECTION_ENDPOINT_PORT": "443",
            "OPEN_SEARCH_COLLECTION_NAME": "prefix-genaichatbot-workspac",
            "POWERTOOLS_DEV": "false",
            "POWERTOOLS_LOGGER_LOG_EVENT": "true",
            "POWERTOOLS_SERVICE_NAME": "chatbot",
            "WORKSPACES_BY_OBJECT_TYPE_INDEX_NAME": "by_object_type_idx",
            "WORKSPACES_TABLE_NAME": {
              "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
            },
          },
        },
        "Handler": "index.lambda_handler",
        "Layers": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":lambda:",
                {
                  "Ref": "AWS::Region",
                },
                ":017000801446:layer:AWSLambdaPowertoolsPythonV2:46",
              ],
            ],
          },
          {
            "Ref": "SharedCommonLayerFC89CBCE",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "Role": {
          "Fn::GetAtt": [
            "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceCreateOpenSearchWorkspaceFunctionServiceRole61F3024C",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 300,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceCreateOpenSearchWorkspaceFunctionSecurityGroupB03EFEB8",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
            },
            {
              "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceCreateOpenSearchWorkspaceFunctionLogRetentionAF038FA1": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceCreateOpenSearchWorkspaceFunction8E852192",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceCreateOpenSearchWorkspaceFunctionSecurityGroupB03EFEB8": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceCreateOpenSearchWorkspaceFunctionB0C33764",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceCreateOpenSearchWorkspaceFunctionServiceRole61F3024C": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceCreateOpenSearchWorkspaceFunctionServiceRoleDefaultPolicy8B8E4375": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "aoss:APIAccessAll",
                "aoss:DescribeIndex",
                "aoss:CreateIndex",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RagEnginesOpenSearchVectorOpenSearchCollection0550028F",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceCreateOpenSearchWorkspaceFunctionServiceRoleDefaultPolicy8B8E4375",
        "Roles": [
          {
            "Ref": "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceCreateOpenSearchWorkspaceFunctionServiceRole61F3024C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceCreateOpenSearchWorkspaceSMLogGroupB97A0992": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceRole11F40159": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::FindInMap": [
                    "ServiceprincipalMap",
                    {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceRoleDefaultPolicyDF1E8530": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:UpdateItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    {
                      "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceCreateOpenSearchWorkspaceFunction8E852192",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceCreateOpenSearchWorkspaceFunction8E852192",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceRoleDefaultPolicyDF1E8530",
        "Roles": [
          {
            "Ref": "RagEnginesOpenSearchVectorCreateOpenSearchWorkspaceRole11F40159",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesOpenSearchVectorEncryptionSecurityPolicy14A4564B": {
      "DependsOn": [
        "RagEnginesOpenSearchVectorNetworkSecurityPolicy0DA2DE7C",
      ],
      "Properties": {
        "Name": "prefix-genaichatbot-encryption-p",
        "Policy": "{"Rules":[{"ResourceType":"collection","Resource":["collection/prefix-genaichatbot-workspac"]}],"AWSOwnedKey":true}",
        "Type": "encryption",
      },
      "Type": "AWS::OpenSearchServerless::SecurityPolicy",
    },
    "RagEnginesOpenSearchVectorNetworkSecurityPolicy0DA2DE7C": {
      "DependsOn": [
        "RagEnginesOpenSearchVectorVpcEndpoint0433102C",
      ],
      "Properties": {
        "Name": "prefix-genaichatbot-network-",
        "Policy": {
          "Fn::Join": [
            "",
            [
              "[{"Rules":[{"ResourceType":"collection","Resource":["collection/prefix-genaichatbot-workspac"]}],"AllowFromPublic":false,"SourceVPCEs":["",
              {
                "Fn::GetAtt": [
                  "RagEnginesOpenSearchVectorVpcEndpoint0433102C",
                  "Id",
                ],
              },
              ""]}]",
            ],
          ],
        },
        "Type": "network",
      },
      "Type": "AWS::OpenSearchServerless::SecurityPolicy",
    },
    "RagEnginesOpenSearchVectorOpenSearchCollection0550028F": {
      "DependsOn": [
        "RagEnginesOpenSearchVectorEncryptionSecurityPolicy14A4564B",
        "RagEnginesOpenSearchVectorNetworkSecurityPolicy0DA2DE7C",
      ],
      "Properties": {
        "Name": "prefix-genaichatbot-workspac",
        "Type": "VECTORSEARCH",
      },
      "Type": "AWS::OpenSearchServerless::Collection",
    },
    "RagEnginesOpenSearchVectorSecurityGroup0D835056": {
      "Properties": {
        "GroupDescription": "Default/RagEngines/OpenSearchVector/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "SharedVPC6716DA5E",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "SharedVPC6716DA5E",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RagEnginesOpenSearchVectorVpcEndpoint0433102C": {
      "Properties": {
        "Name": "prefix-genaichatbot-vpce",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "RagEnginesOpenSearchVectorSecurityGroup0D835056",
              "GroupId",
            ],
          },
        ],
        "SubnetIds": [
          {
            "Ref": "SharedVPCisolatedSubnet1SubnetAE743C40",
          },
          {
            "Ref": "SharedVPCisolatedSubnet2SubnetBC723A26",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::OpenSearchServerless::VpcEndpoint",
    },
    "RagEnginesRagDynamoDBTablesDocumentsF6F2B272": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "workspace_id",
            "AttributeType": "S",
          },
          {
            "AttributeName": "document_id",
            "AttributeType": "S",
          },
          {
            "AttributeName": "compound_sort_key",
            "AttributeType": "S",
          },
          {
            "AttributeName": "status",
            "AttributeType": "S",
          },
          {
            "AttributeName": "document_type",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "by_compound_key_idx",
            "KeySchema": [
              {
                "AttributeName": "workspace_id",
                "KeyType": "HASH",
              },
              {
                "AttributeName": "compound_sort_key",
                "KeyType": "RANGE",
              },
            ],
            "Projection": {
              "ProjectionType": "ALL",
            },
          },
          {
            "IndexName": "by_status_idx",
            "KeySchema": [
              {
                "AttributeName": "status",
                "KeyType": "HASH",
              },
              {
                "AttributeName": "document_type",
                "KeyType": "RANGE",
              },
            ],
            "Projection": {
              "ProjectionType": "ALL",
            },
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "workspace_id",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "document_id",
            "KeyType": "RANGE",
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": {
          "SSEEnabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "workspace_id",
            "AttributeType": "S",
          },
          {
            "AttributeName": "object_type",
            "AttributeType": "S",
          },
          {
            "AttributeName": "created_at",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "by_object_type_idx",
            "KeySchema": [
              {
                "AttributeName": "object_type",
                "KeyType": "HASH",
              },
              {
                "AttributeName": "created_at",
                "KeyType": "RANGE",
              },
            ],
            "Projection": {
              "ProjectionType": "ALL",
            },
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "workspace_id",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "object_type",
            "KeyType": "RANGE",
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": {
          "SSEEnabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesSageMakerModelMultiAB24ABucketAutoDeleteObjectsCustomResource4D45F7A7": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "RagEnginesSageMakerModelMultiAB24ABucketPolicyC0BB6B78",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "RagEnginesSageMakerModelMultiAB24ABucketF09A69F9",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesSageMakerModelMultiAB24ABucketF09A69F9": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "RagEnginesSageMakerModelMultiAB24ALogsBucket1624BE94",
          },
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          {
            "Key": "aws-cdk:cr-owned:build-script:2611634f",
            "Value": "true",
          },
          {
            "Key": "aws-cdk:cr-owned:model-code:825de32d",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesSageMakerModelMultiAB24ABucketPolicyC0BB6B78": {
      "Properties": {
        "Bucket": {
          "Ref": "RagEnginesSageMakerModelMultiAB24ABucketF09A69F9",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesSageMakerModelMultiAB24ABucketF09A69F9",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesSageMakerModelMultiAB24ABucketF09A69F9",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesSageMakerModelMultiAB24ABucketF09A69F9",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesSageMakerModelMultiAB24ABucketF09A69F9",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "RagEnginesSageMakerModelMultiAB24ABuildE30DA23B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ProjectName": {
          "Ref": "RagEnginesSageMakerModelMultiAB24ACodeBuildProjectE6650C61",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "RagEnginesSageMakerModelMultiAB24AProviderframeworkonEventC75C76C6",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesSageMakerModelMultiAB24ACodeBuildProjectE6650C61": {
      "DependsOn": [
        "RagEnginesSageMakerModelMultiAB24AModelCodeAwsCliLayer876643AD",
        "RagEnginesSageMakerModelMultiAB24AModelCodeCustomResourceA0D3E041",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-CB4",
              "reason": "Build is only ran as part of stack creation and does not contain external data.",
            },
            {
              "id": "AwsSolutions-CB3",
              "reason": "Privileged mode is required as build project is used to build Docker images.",
            },
          ],
        },
      },
      "Properties": {
        "Artifacts": {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_LARGE",
          "EnvironmentVariables": [
            {
              "Name": "MODEL_ID",
              "Type": "PLAINTEXT",
              "Value": "intfloat/multilingual-e5-large,sentence-transformers/all-MiniLM-L6-v2,cross-encoder/ms-marco-MiniLM-L-12-v2",
            },
            {
              "Name": "BUILD_BUCKET",
              "Type": "PLAINTEXT",
              "Value": {
                "Ref": "RagEnginesSageMakerModelMultiAB24ABucketF09A69F9",
              },
            },
            {
              "Name": "HF_HUB_ENABLE_HF_TRANSFER",
              "Type": "PLAINTEXT",
              "Value": "1",
            },
            {
              "Name": "HF_HUB_DISABLE_PROGRESS_BARS",
              "Type": "PLAINTEXT",
              "Value": "1",
            },
            {
              "Name": "HF_HUB_DISABLE_TELEMETRY",
              "Type": "PLAINTEXT",
              "Value": "1",
            },
          ],
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "RagEnginesSageMakerModelMultiAB24ACodeBuildRoleD1F3AB46",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "echo \\"Updating system packages...\\"",
        "apt-get update",
        "echo \\"Installing tar, pigz, awscli, virtualenv, python3-pip, and python3-dev...\\"",
        "apt-get install -y tar pigz awscli virtualenv python3-pip python3-dev",
        "echo \\"Updating pip...\\"",
        "pip3 install --upgrade pip"
      ]
    },
    "pre_build": {
      "commands": [
        "echo \\"Downloading build code from S3...\\"",
        "aws s3 cp s3://$BUILD_BUCKET/build-script ./build --recursive",
        "echo \\"Downloading model from S3...\\"",
        "aws s3 cp s3://$BUILD_BUCKET/model-code ./model --recursive",
        "ls -al",
        "ls -al ./build",
        "ls -al ./model",
        "COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)",
        "IMAGE_TAG=\${COMMIT_HASH:=latest}"
      ]
    },
    "build": {
      "commands": [
        "echo \\"Installing Python requirements...\\"",
        "pip3 install -r build/requirements.txt --upgrade",
        "echo \\"Running script.py...\\"",
        "python3 build/script.py"
      ]
    }
  }
}",
          "Type": "NO_SOURCE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "RagEnginesSageMakerModelMultiAB24ACodeBuildRoleD1F3AB46": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Access to all log groups required for CloudWatch log group creation.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "CodeBuildPolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesSageMakerModelMultiAB24ACodeBuildRoleDefaultPolicy95BCC278": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "RagEnginesSageMakerModelMultiAB24ACodeBuildProjectE6650C61",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "RagEnginesSageMakerModelMultiAB24ACodeBuildProjectE6650C61",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "RagEnginesSageMakerModelMultiAB24ACodeBuildProjectE6650C61",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesSageMakerModelMultiAB24ABucketF09A69F9",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesSageMakerModelMultiAB24ABucketF09A69F9",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesSageMakerModelMultiAB24ACodeBuildRoleDefaultPolicy95BCC278",
        "Roles": [
          {
            "Ref": "RagEnginesSageMakerModelMultiAB24ACodeBuildRoleD1F3AB46",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesSageMakerModelMultiAB24AEndpoint6DA7D681": {
      "DependsOn": [
        "RagEnginesSageMakerModelMultiAB24AEndpointConfigB7DA0C5A",
      ],
      "Properties": {
        "EndpointConfigName": {
          "Fn::GetAtt": [
            "RagEnginesSageMakerModelMultiAB24AEndpointConfigB7DA0C5A",
            "EndpointConfigName",
          ],
        },
      },
      "Type": "AWS::SageMaker::Endpoint",
    },
    "RagEnginesSageMakerModelMultiAB24AEndpointConfigB7DA0C5A": {
      "DependsOn": [
        "RagEnginesSageMakerModelMultiAB24AModel16A4AAEF",
      ],
      "Properties": {
        "ProductionVariants": [
          {
            "ContainerStartupHealthCheckTimeoutInSeconds": 900,
            "InitialInstanceCount": 1,
            "InitialVariantWeight": 1,
            "InstanceType": "ml.g4dn.xlarge",
            "ModelName": {
              "Fn::GetAtt": [
                "RagEnginesSageMakerModelMultiAB24AModel16A4AAEF",
                "ModelName",
              ],
            },
            "VariantName": "AllTraffic",
          },
        ],
      },
      "Type": "AWS::SageMaker::EndpointConfig",
    },
    "RagEnginesSageMakerModelMultiAB24AIsCompleteHandlerDF048AE3": {
      "DependsOn": [
        "RagEnginesSageMakerModelMultiAB24AIsCompleteHandlerServiceRoleDefaultPolicyC38586FA",
        "RagEnginesSageMakerModelMultiAB24AIsCompleteHandlerServiceRole01E1EAD7",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Description": "Checks the completion of an HuggingFace build request",
        "Handler": "index.is_complete",
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "Role": {
          "Fn::GetAtt": [
            "RagEnginesSageMakerModelMultiAB24AIsCompleteHandlerServiceRole01E1EAD7",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
      },
      "Type": "AWS::Lambda::Function",
    },
    "RagEnginesSageMakerModelMultiAB24AIsCompleteHandlerLogRetention65A63A01": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "RagEnginesSageMakerModelMultiAB24AIsCompleteHandlerDF048AE3",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "RagEnginesSageMakerModelMultiAB24AIsCompleteHandlerServiceRole01E1EAD7": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesSageMakerModelMultiAB24AIsCompleteHandlerServiceRoleDefaultPolicyC38586FA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codebuild:BatchGetBuilds",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RagEnginesSageMakerModelMultiAB24ACodeBuildProjectE6650C61",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesSageMakerModelMultiAB24AIsCompleteHandlerServiceRoleDefaultPolicyC38586FA",
        "Roles": [
          {
            "Ref": "RagEnginesSageMakerModelMultiAB24AIsCompleteHandlerServiceRole01E1EAD7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesSageMakerModelMultiAB24ALogsBucket1624BE94": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "Logging bucket does not require it's own access logs.",
            },
          ],
        },
      },
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesSageMakerModelMultiAB24ALogsBucketAutoDeleteObjectsCustomResourceFB4DF7EB": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "RagEnginesSageMakerModelMultiAB24ALogsBucketPolicy6F361623",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "RagEnginesSageMakerModelMultiAB24ALogsBucket1624BE94",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesSageMakerModelMultiAB24ALogsBucketPolicy6F361623": {
      "Properties": {
        "Bucket": {
          "Ref": "RagEnginesSageMakerModelMultiAB24ALogsBucket1624BE94",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesSageMakerModelMultiAB24ALogsBucket1624BE94",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesSageMakerModelMultiAB24ALogsBucket1624BE94",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesSageMakerModelMultiAB24ALogsBucket1624BE94",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesSageMakerModelMultiAB24ALogsBucket1624BE94",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "RagEnginesSageMakerModelMultiAB24AModel16A4AAEF": {
      "DependsOn": [
        "RagEnginesSageMakerModelMultiAB24ABuildE30DA23B",
      ],
      "Properties": {
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "RagEnginesSageMakerModelMultiAB24ASageMakerExecutionRole6740DE48",
            "Arn",
          ],
        },
        "PrimaryContainer": {
          "Environment": {
            "SAGEMAKER_CONTAINER_LOG_LEVEL": "20",
            "SAGEMAKER_REGION": {
              "Ref": "AWS::Region",
            },
          },
          "Image": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::FindInMap": [
                    "RagEnginesSageMakerModelImageRepositoryCfnMappingF3891114",
                    {
                      "Ref": "AWS::Region",
                    },
                    "account",
                  ],
                },
                ".dkr.ecr.",
                {
                  "Ref": "AWS::Region",
                },
                ".amazonaws.com/huggingface-pytorch-inference:2.0.0-transformers4.28.1-gpu-py310-cu118-ubuntu20.04",
              ],
            ],
          },
          "Mode": "SingleModel",
          "ModelDataUrl": {
            "Fn::Join": [
              "",
              [
                "s3://",
                {
                  "Ref": "RagEnginesSageMakerModelMultiAB24ABucketF09A69F9",
                },
                "/out/model.tar.gz",
              ],
            ],
          },
        },
      },
      "Type": "AWS::SageMaker::Model",
    },
    "RagEnginesSageMakerModelMultiAB24AModelCodeAwsCliLayer876643AD": {
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "RagEnginesSageMakerModelMultiAB24AModelCodeCustomResourceA0D3E041": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "DestinationBucketKeyPrefix": "model-code",
        "DestinationBucketName": {
          "Ref": "RagEnginesSageMakerModelMultiAB24ABucketF09A69F9",
        },
        "Prune": true,
        "RetainOnDelete": false,
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": [
          {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
        ],
        "SourceObjectKeys": [
          "Dummy",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesSageMakerModelMultiAB24AOnEventHandler3AAD1104": {
      "DependsOn": [
        "RagEnginesSageMakerModelMultiAB24AOnEventHandlerServiceRoleDefaultPolicyBE53C89A",
        "RagEnginesSageMakerModelMultiAB24AOnEventHandlerServiceRole0D576031",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Description": "Manages HuggingFace model build requests",
        "Handler": "index.on_event",
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "Role": {
          "Fn::GetAtt": [
            "RagEnginesSageMakerModelMultiAB24AOnEventHandlerServiceRole0D576031",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
      },
      "Type": "AWS::Lambda::Function",
    },
    "RagEnginesSageMakerModelMultiAB24AOnEventHandlerLogRetentionF204D605": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "RagEnginesSageMakerModelMultiAB24AOnEventHandler3AAD1104",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "RagEnginesSageMakerModelMultiAB24AOnEventHandlerServiceRole0D576031": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesSageMakerModelMultiAB24AOnEventHandlerServiceRoleDefaultPolicyBE53C89A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RagEnginesSageMakerModelMultiAB24ACodeBuildProjectE6650C61",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesSageMakerModelMultiAB24AOnEventHandlerServiceRoleDefaultPolicyBE53C89A",
        "Roles": [
          {
            "Ref": "RagEnginesSageMakerModelMultiAB24AOnEventHandlerServiceRole0D576031",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesSageMakerModelMultiAB24AProviderframeworkisComplete0D14240D": {
      "DependsOn": [
        "RagEnginesSageMakerModelMultiAB24ACodeBuildProjectE6650C61",
        "RagEnginesSageMakerModelMultiAB24AProviderframeworkisCompleteServiceRoleDefaultPolicyCAE451CD",
        "RagEnginesSageMakerModelMultiAB24AProviderframeworkisCompleteServiceRole839AE1FE",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Description": "AWS CDK resource provider framework - isComplete (Default/RagEngines/SageMaker/Model/MultiAB24A/Provider)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "RagEnginesSageMakerModelMultiAB24AIsCompleteHandlerDF048AE3",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "RagEnginesSageMakerModelMultiAB24AOnEventHandler3AAD1104",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.isComplete",
        "Role": {
          "Fn::GetAtt": [
            "RagEnginesSageMakerModelMultiAB24AProviderframeworkisCompleteServiceRole839AE1FE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "RagEnginesSageMakerModelMultiAB24AProviderframeworkisCompleteServiceRole839AE1FE": {
      "DependsOn": [
        "RagEnginesSageMakerModelMultiAB24ACodeBuildProjectE6650C61",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesSageMakerModelMultiAB24AProviderframeworkisCompleteServiceRoleDefaultPolicyCAE451CD": {
      "DependsOn": [
        "RagEnginesSageMakerModelMultiAB24ACodeBuildProjectE6650C61",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesSageMakerModelMultiAB24AOnEventHandler3AAD1104",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesSageMakerModelMultiAB24AOnEventHandler3AAD1104",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesSageMakerModelMultiAB24AIsCompleteHandlerDF048AE3",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesSageMakerModelMultiAB24AIsCompleteHandlerDF048AE3",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesSageMakerModelMultiAB24AProviderframeworkisCompleteServiceRoleDefaultPolicyCAE451CD",
        "Roles": [
          {
            "Ref": "RagEnginesSageMakerModelMultiAB24AProviderframeworkisCompleteServiceRole839AE1FE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesSageMakerModelMultiAB24AProviderframeworkonEventC75C76C6": {
      "DependsOn": [
        "RagEnginesSageMakerModelMultiAB24ACodeBuildProjectE6650C61",
        "RagEnginesSageMakerModelMultiAB24AProviderframeworkonEventServiceRoleDefaultPolicy22EFF5D4",
        "RagEnginesSageMakerModelMultiAB24AProviderframeworkonEventServiceRoleF3392DDD",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Description": "AWS CDK resource provider framework - onEvent (Default/RagEngines/SageMaker/Model/MultiAB24A/Provider)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "RagEnginesSageMakerModelMultiAB24AIsCompleteHandlerDF048AE3",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "RagEnginesSageMakerModelMultiAB24AOnEventHandler3AAD1104",
                "Arn",
              ],
            },
            "WAITER_STATE_MACHINE_ARN": {
              "Ref": "RagEnginesSageMakerModelMultiAB24AProviderwaiterstatemachineBE5457F2",
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "RagEnginesSageMakerModelMultiAB24AProviderframeworkonEventServiceRoleF3392DDD",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "RagEnginesSageMakerModelMultiAB24AProviderframeworkonEventServiceRoleDefaultPolicy22EFF5D4": {
      "DependsOn": [
        "RagEnginesSageMakerModelMultiAB24ACodeBuildProjectE6650C61",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesSageMakerModelMultiAB24AOnEventHandler3AAD1104",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesSageMakerModelMultiAB24AOnEventHandler3AAD1104",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesSageMakerModelMultiAB24AIsCompleteHandlerDF048AE3",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesSageMakerModelMultiAB24AIsCompleteHandlerDF048AE3",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "RagEnginesSageMakerModelMultiAB24AProviderwaiterstatemachineBE5457F2",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesSageMakerModelMultiAB24AProviderframeworkonEventServiceRoleDefaultPolicy22EFF5D4",
        "Roles": [
          {
            "Ref": "RagEnginesSageMakerModelMultiAB24AProviderframeworkonEventServiceRoleF3392DDD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesSageMakerModelMultiAB24AProviderframeworkonEventServiceRoleF3392DDD": {
      "DependsOn": [
        "RagEnginesSageMakerModelMultiAB24ACodeBuildProjectE6650C61",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesSageMakerModelMultiAB24AProviderframeworkonTimeoutDBD8B04B": {
      "DependsOn": [
        "RagEnginesSageMakerModelMultiAB24ACodeBuildProjectE6650C61",
        "RagEnginesSageMakerModelMultiAB24AProviderframeworkonTimeoutServiceRoleDefaultPolicy0A4130BF",
        "RagEnginesSageMakerModelMultiAB24AProviderframeworkonTimeoutServiceRole080F6A31",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Description": "AWS CDK resource provider framework - onTimeout (Default/RagEngines/SageMaker/Model/MultiAB24A/Provider)",
        "Environment": {
          "Variables": {
            "USER_IS_COMPLETE_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "RagEnginesSageMakerModelMultiAB24AIsCompleteHandlerDF048AE3",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "RagEnginesSageMakerModelMultiAB24AOnEventHandler3AAD1104",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onTimeout",
        "Role": {
          "Fn::GetAtt": [
            "RagEnginesSageMakerModelMultiAB24AProviderframeworkonTimeoutServiceRole080F6A31",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "RagEnginesSageMakerModelMultiAB24AProviderframeworkonTimeoutServiceRole080F6A31": {
      "DependsOn": [
        "RagEnginesSageMakerModelMultiAB24ACodeBuildProjectE6650C61",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesSageMakerModelMultiAB24AProviderframeworkonTimeoutServiceRoleDefaultPolicy0A4130BF": {
      "DependsOn": [
        "RagEnginesSageMakerModelMultiAB24ACodeBuildProjectE6650C61",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesSageMakerModelMultiAB24AOnEventHandler3AAD1104",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesSageMakerModelMultiAB24AOnEventHandler3AAD1104",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesSageMakerModelMultiAB24AIsCompleteHandlerDF048AE3",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesSageMakerModelMultiAB24AIsCompleteHandlerDF048AE3",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesSageMakerModelMultiAB24AProviderframeworkonTimeoutServiceRoleDefaultPolicy0A4130BF",
        "Roles": [
          {
            "Ref": "RagEnginesSageMakerModelMultiAB24AProviderframeworkonTimeoutServiceRole080F6A31",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesSageMakerModelMultiAB24AProviderwaiterstatemachineBE5457F2": {
      "DependsOn": [
        "RagEnginesSageMakerModelMultiAB24ACodeBuildProjectE6650C61",
        "RagEnginesSageMakerModelMultiAB24AProviderwaiterstatemachineRoleDefaultPolicy8E60AA88",
        "RagEnginesSageMakerModelMultiAB24AProviderwaiterstatemachineRole7414E6C2",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"framework-isComplete-task","States":{"framework-isComplete-task":{"End":true,"Retry":[{"ErrorEquals":["States.ALL"],"IntervalSeconds":30,"MaxAttempts":240,"BackoffRate":1}],"Catch":[{"ErrorEquals":["States.ALL"],"Next":"framework-onTimeout-task"}],"Type":"Task","Resource":"",
              {
                "Fn::GetAtt": [
                  "RagEnginesSageMakerModelMultiAB24AProviderframeworkisComplete0D14240D",
                  "Arn",
                ],
              },
              ""},"framework-onTimeout-task":{"End":true,"Type":"Task","Resource":"",
              {
                "Fn::GetAtt": [
                  "RagEnginesSageMakerModelMultiAB24AProviderframeworkonTimeoutDBD8B04B",
                  "Arn",
                ],
              },
              ""}}}",
            ],
          ],
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "RagEnginesSageMakerModelMultiAB24AProviderwaiterstatemachineLogGroup98223E01",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "IncludeExecutionData": false,
          "Level": "ERROR",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "RagEnginesSageMakerModelMultiAB24AProviderwaiterstatemachineRole7414E6C2",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "RagEnginesSageMakerModelMultiAB24AProviderwaiterstatemachineLogGroup98223E01": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "RagEnginesSageMakerModelMultiAB24ACodeBuildProjectE6650C61",
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/vendedlogs/states/waiter-state-machine-",
              {
                "Ref": "RagEnginesSageMakerModelMultiAB24AProviderframeworkisComplete0D14240D",
              },
              "-c8fa6a758f1922894c130edb0f5ead18b402e7fd31",
            ],
          ],
        },
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "RagEnginesSageMakerModelMultiAB24AProviderwaiterstatemachineRole7414E6C2": {
      "DependsOn": [
        "RagEnginesSageMakerModelMultiAB24ACodeBuildProjectE6650C61",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::FindInMap": [
                    "ServiceprincipalMap",
                    {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesSageMakerModelMultiAB24AProviderwaiterstatemachineRoleDefaultPolicy8E60AA88": {
      "DependsOn": [
        "RagEnginesSageMakerModelMultiAB24ACodeBuildProjectE6650C61",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesSageMakerModelMultiAB24AProviderframeworkisComplete0D14240D",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesSageMakerModelMultiAB24AProviderframeworkisComplete0D14240D",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesSageMakerModelMultiAB24AProviderframeworkonTimeoutDBD8B04B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesSageMakerModelMultiAB24AProviderframeworkonTimeoutDBD8B04B",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:CreateLogStream",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutLogEvents",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesSageMakerModelMultiAB24AProviderwaiterstatemachineRoleDefaultPolicy8E60AA88",
        "Roles": [
          {
            "Ref": "RagEnginesSageMakerModelMultiAB24AProviderwaiterstatemachineRole7414E6C2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesSageMakerModelMultiAB24ASageMakerExecutionRole6740DE48": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Gives user ability to deploy and delete endpoints from the UI.",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Gives user ability to deploy and delete endpoints from the UI.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "sagemaker.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSageMakerFullAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesSageMakerModelMultiAB24ASageMakerExecutionRoleDefaultPolicy75A232F4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesSageMakerModelMultiAB24ABucketF09A69F9",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesSageMakerModelMultiAB24ABucketF09A69F9",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesSageMakerModelMultiAB24ASageMakerExecutionRoleDefaultPolicy75A232F4",
        "Roles": [
          {
            "Ref": "RagEnginesSageMakerModelMultiAB24ASageMakerExecutionRole6740DE48",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesSageMakerModelMultiAB24AScriptAwsCliLayer3B70313A": {
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "RagEnginesSageMakerModelMultiAB24AScriptCustomResource976B9D13": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "DestinationBucketKeyPrefix": "build-script",
        "DestinationBucketName": {
          "Ref": "RagEnginesSageMakerModelMultiAB24ABucketF09A69F9",
        },
        "Prune": true,
        "RetainOnDelete": false,
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": [
          {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
        ],
        "SourceObjectKeys": [
          "Dummy",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesWorkspacesDeleteDocumentA1FD6471": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "RagEnginesWorkspacesDeleteDocumentRoleDefaultPolicy71FACDB8",
        "RagEnginesWorkspacesDeleteDocumentRoleF5BDB92F",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"SetDeleting","States":{"SetDeleting":{"Next":"Delete","Type":"Task","ResultPath":null,"Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"document_id":{"S.$":"$.document_id"}},"TableName":"",
              {
                "Ref": "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
              },
              "","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":statusValue":{"S":"deleting"}},"UpdateExpression":"set #status=:statusValue"}},"Delete":{"Next":"Success","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.deleteResult","Next":"HandleError"}],"Type":"Task","ResultPath":"$.deleteResult","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "RagEnginesWorkspacesDeleteDocumentDeleteDocumentFunctionF13C7D85",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"Success":{"Type":"Succeed"},"HandleError":{"Next":"Fail","Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"document_id":{"S.$":"$.document_id"}},"TableName":"",
              {
                "Ref": "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
              },
              "","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":error":{"S":"error"}},"UpdateExpression":"set #status = :error"}},"Fail":{"Type":"Fail","Cause":"Document deletion failed"}},"TimeoutSeconds":300,"Comment":"Delete Document Workflow"}",
            ],
          ],
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "RagEnginesWorkspacesDeleteDocumentDeleteDocumentSMLogGroupD3F7AE1A",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ALL",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "RagEnginesWorkspacesDeleteDocumentRoleF5BDB92F",
            "Arn",
          ],
        },
        "TracingConfiguration": {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesWorkspacesDeleteDocumentDeleteDocumentFunctionF13C7D85": {
      "DependsOn": [
        "RagEnginesWorkspacesDeleteDocumentDeleteDocumentFunctionServiceRoleDefaultPolicyF5706972",
        "RagEnginesWorkspacesDeleteDocumentDeleteDocumentFunctionServiceRole3BBCBEE9",
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "Architectures": [
          "x86_64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Description": "Deletes document added to a workspace",
        "Environment": {
          "Variables": {
            "AURORA_DB_SECRET_ID": {
              "Ref": "RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9",
            },
            "DEFAULT_KENDRA_S3_DATA_SOURCE_BUCKET_NAME": {
              "Ref": "RagEnginesKendraRetrievalKendraDataBucket1627A447",
            },
            "DOCUMENTS_BY_COMPOUND_KEY_INDEX_NAME": "by_compound_key_idx",
            "DOCUMENTS_TABLE_NAME": {
              "Ref": "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
            },
            "LOG_LEVEL": "INFO",
            "OPEN_SEARCH_COLLECTION_ENDPOINT": {
              "Fn::GetAtt": [
                "RagEnginesOpenSearchVectorOpenSearchCollection0550028F",
                "CollectionEndpoint",
              ],
            },
            "POWERTOOLS_DEV": "false",
            "POWERTOOLS_LOGGER_LOG_EVENT": "true",
            "POWERTOOLS_SERVICE_NAME": "chatbot",
            "PROCESSING_BUCKET_NAME": {
              "Ref": "RagEnginesDataImportProcessingBucketA7BE9701",
            },
            "UPLOAD_BUCKET_NAME": {
              "Ref": "RagEnginesDataImportUploadBucket061D697E",
            },
            "WORKSPACES_BY_OBJECT_TYPE_INDEX_NAME": "by_object_type_idx",
            "WORKSPACES_TABLE_NAME": {
              "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
            },
          },
        },
        "Handler": "index.lambda_handler",
        "Layers": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":lambda:",
                {
                  "Ref": "AWS::Region",
                },
                ":017000801446:layer:AWSLambdaPowertoolsPythonV2:46",
              ],
            ],
          },
          {
            "Ref": "SharedCommonLayerFC89CBCE",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "Role": {
          "Fn::GetAtt": [
            "RagEnginesWorkspacesDeleteDocumentDeleteDocumentFunctionServiceRole3BBCBEE9",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 900,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "RagEnginesWorkspacesDeleteDocumentDeleteDocumentFunctionSecurityGroupD7C57FB7",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
            },
            {
              "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "RagEnginesWorkspacesDeleteDocumentDeleteDocumentFunctionLogRetentionFB073E77": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "RagEnginesWorkspacesDeleteDocumentDeleteDocumentFunctionF13C7D85",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "RagEnginesWorkspacesDeleteDocumentDeleteDocumentFunctionSecurityGroupD7C57FB7": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function RagEnginesWorkspacesDeleteDocumentDeleteDocumentFunction90DA0BF4",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RagEnginesWorkspacesDeleteDocumentDeleteDocumentFunctionServiceRole3BBCBEE9": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesWorkspacesDeleteDocumentDeleteDocumentFunctionServiceRoleDefaultPolicyF5706972": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9",
              },
            },
            {
              "Action": [
                "aoss:APIAccessAll",
                "aoss:DescribeIndex",
                "aoss:UpdateIndex",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RagEnginesOpenSearchVectorOpenSearchCollection0550028F",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportUploadBucket061D697E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportUploadBucket061D697E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportProcessingBucketA7BE9701",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportProcessingBucketA7BE9701",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesKendraRetrievalKendraDataBucket1627A447",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesKendraRetrievalKendraDataBucket1627A447",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesWorkspacesDeleteDocumentDeleteDocumentFunctionServiceRoleDefaultPolicyF5706972",
        "Roles": [
          {
            "Ref": "RagEnginesWorkspacesDeleteDocumentDeleteDocumentFunctionServiceRole3BBCBEE9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesWorkspacesDeleteDocumentDeleteDocumentSMLogGroupD3F7AE1A": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesWorkspacesDeleteDocumentRoleDefaultPolicy71FACDB8": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:UpdateItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    {
                      "Ref": "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesWorkspacesDeleteDocumentDeleteDocumentFunctionF13C7D85",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesWorkspacesDeleteDocumentDeleteDocumentFunctionF13C7D85",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesWorkspacesDeleteDocumentRoleDefaultPolicy71FACDB8",
        "Roles": [
          {
            "Ref": "RagEnginesWorkspacesDeleteDocumentRoleF5BDB92F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesWorkspacesDeleteDocumentRoleF5BDB92F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::FindInMap": [
                    "ServiceprincipalMap",
                    {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesWorkspacesDeleteWorkspace6908C6DA": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "RagEnginesWorkspacesDeleteWorkspaceRoleDefaultPolicyDB594186",
        "RagEnginesWorkspacesDeleteWorkspaceRole19E7851E",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"SetDeleting","States":{"SetDeleting":{"Next":"Delete","Type":"Task","ResultPath":null,"Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"object_type":{"S":"workspace"}},"TableName":"",
              {
                "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
              },
              "","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":statusValue":{"S":"deleting"}},"UpdateExpression":"set #status=:statusValue"}},"Delete":{"Next":"Success","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.deleteResult","Next":"HandleError"}],"Type":"Task","ResultPath":"$.deleteResult","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "RagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceFunction8A41CF72",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"Success":{"Type":"Succeed"},"HandleError":{"Next":"Fail","Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"object_type":{"S":"workspace"}},"TableName":"",
              {
                "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
              },
              "","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":error":{"S":"error"}},"UpdateExpression":"set #status = :error"}},"Fail":{"Type":"Fail","Cause":"Workspace deletion failed"}},"TimeoutSeconds":300,"Comment":"Delete Workspace Workflow"}",
            ],
          ],
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "RagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceSMLogGroup6EA3524F",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ALL",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "RagEnginesWorkspacesDeleteWorkspaceRole19E7851E",
            "Arn",
          ],
        },
        "TracingConfiguration": {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceFunction8A41CF72": {
      "DependsOn": [
        "RagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceFunctionServiceRoleDefaultPolicy2A165D0F",
        "RagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceFunctionServiceRoleD99F8BAF",
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "Architectures": [
          "x86_64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
        "Description": "Deletes a workspace",
        "Environment": {
          "Variables": {
            "AURORA_DB_SECRET_ID": {
              "Ref": "RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9",
            },
            "DEFAULT_KENDRA_S3_DATA_SOURCE_BUCKET_NAME": {
              "Ref": "RagEnginesKendraRetrievalKendraDataBucket1627A447",
            },
            "DOCUMENTS_BY_COMPOUND_KEY_INDEX_NAME": "by_compound_key_idx",
            "DOCUMENTS_BY_STATUS_INDEX": "by_status_idx",
            "DOCUMENTS_TABLE_NAME": {
              "Ref": "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
            },
            "LOG_LEVEL": "INFO",
            "OPEN_SEARCH_COLLECTION_ENDPOINT": {
              "Fn::GetAtt": [
                "RagEnginesOpenSearchVectorOpenSearchCollection0550028F",
                "CollectionEndpoint",
              ],
            },
            "POWERTOOLS_DEV": "false",
            "POWERTOOLS_LOGGER_LOG_EVENT": "true",
            "POWERTOOLS_SERVICE_NAME": "chatbot",
            "PROCESSING_BUCKET_NAME": {
              "Ref": "RagEnginesDataImportProcessingBucketA7BE9701",
            },
            "UPLOAD_BUCKET_NAME": {
              "Ref": "RagEnginesDataImportUploadBucket061D697E",
            },
            "WORKSPACES_BY_OBJECT_TYPE_INDEX_NAME": "by_object_type_idx",
            "WORKSPACES_TABLE_NAME": {
              "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
            },
          },
        },
        "Handler": "index.lambda_handler",
        "Layers": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":lambda:",
                {
                  "Ref": "AWS::Region",
                },
                ":017000801446:layer:AWSLambdaPowertoolsPythonV2:46",
              ],
            ],
          },
          {
            "Ref": "SharedCommonLayerFC89CBCE",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "Role": {
          "Fn::GetAtt": [
            "RagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceFunctionServiceRoleD99F8BAF",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 900,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "RagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceFunctionSecurityGroup9E919F5A",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
            },
            {
              "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "RagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceFunctionLogRetention968A7432": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "RagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceFunction8A41CF72",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "RagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceFunctionSecurityGroup9E919F5A": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function RagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceFunction90779FFC",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceFunctionServiceRoleD99F8BAF": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceFunctionServiceRoleDefaultPolicy2A165D0F": {
      "DependsOn": [
        "SharedVPCprivateSubnet1DefaultRoute608F3753",
        "SharedVPCprivateSubnet1RouteTableAssociation83D920FA",
        "SharedVPCprivateSubnet2DefaultRoute4387C202",
        "SharedVPCprivateSubnet2RouteTableAssociation6788E94C",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9",
              },
            },
            {
              "Action": [
                "aoss:APIAccessAll",
                "aoss:DescribeIndex",
                "aoss:DeleteIndex",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RagEnginesOpenSearchVectorOpenSearchCollection0550028F",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportUploadBucket061D697E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportUploadBucket061D697E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesDataImportProcessingBucketA7BE9701",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesDataImportProcessingBucketA7BE9701",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesKendraRetrievalKendraDataBucket1627A447",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesKendraRetrievalKendraDataBucket1627A447",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesRagDynamoDBTablesDocumentsF6F2B272",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceFunctionServiceRoleDefaultPolicy2A165D0F",
        "Roles": [
          {
            "Ref": "RagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceFunctionServiceRoleD99F8BAF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceSMLogGroup6EA3524F": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "RagEnginesWorkspacesDeleteWorkspaceRole19E7851E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::FindInMap": [
                    "ServiceprincipalMap",
                    {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RagEnginesWorkspacesDeleteWorkspaceRoleDefaultPolicyDB594186": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:UpdateItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    {
                      "Ref": "RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "RagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceFunction8A41CF72",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "RagEnginesWorkspacesDeleteWorkspaceDeleteWorkspaceFunction8A41CF72",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RagEnginesWorkspacesDeleteWorkspaceRoleDefaultPolicyDB594186",
        "Roles": [
          {
            "Ref": "RagEnginesWorkspacesDeleteWorkspaceRole19E7851E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SharedApiKeysSecret9EA666ED": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SMG4",
              "reason": "Secret value is blank.",
            },
          ],
        },
      },
      "Properties": {
        "SecretString": "{}",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "SharedCommonLayerFC89CBCE": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "CompatibleArchitectures": [
          "x86_64",
        ],
        "CompatibleRuntimes": [
          "python3.11",
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Dummy",
        },
      },
      "Type": "AWS::Lambda::LayerVersion",
      "UpdateReplacePolicy": "Delete",
    },
    "SharedConfig358B4A20": {
      "Properties": {
        "Type": "String",
        "Value": "{"prefix":"prefix","privateWebsite":true,"certificate":"","cfGeoRestrictEnable":true,"cfGeoRestrictList":[],"bedrock":{"enabled":true,"region":"us-east-1"},"llms":{"sagemaker":["FalconLite [ml.g5.12xlarge]","Idefics_80b (Multimodal) [ml.g5.48xlarge]"]},"rag":{"enabled":true,"engines":{"aurora":{"enabled":true},"opensearch":{"enabled":true},"kendra":{"enabled":true,"createIndex":true,"enterprise":true},"knowledgeBase":{"enabled":false}},"embeddingsModels":[{"provider":"sagemaker","name":"intfloat/multilingual-e5-large","dimensions":1024},{"provider":"sagemaker","name":"sentence-transformers/all-MiniLM-L6-v2","dimensions":384},{"provider":"bedrock","name":"amazon.titan-embed-text-v1","dimensions":1536},{"provider":"bedrock","name":"amazon.titan-embed-image-v1","dimensions":1024},{"provider":"bedrock","name":"cohere.embed-english-v3","dimensions":1024},{"provider":"bedrock","name":"cohere.embed-multilingual-v3","dimensions":1024,"default":true},{"provider":"openai","name":"text-embedding-ada-002","dimensions":1536}],"crossEncoderModels":[{"provider":"sagemaker","name":"cross-encoder/ms-marco-MiniLM-L-12-v2","default":true}]}}",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SharedFLowLogsLogGroupE884FFC6": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "SharedFlowLog04219D2B": {
      "Properties": {
        "DeliverLogsPermissionArn": {
          "Fn::GetAtt": [
            "SharedFlowLogIAMRoleA0029984",
            "Arn",
          ],
        },
        "LogDestinationType": "cloud-watch-logs",
        "LogGroupName": {
          "Ref": "SharedFLowLogsLogGroupE884FFC6",
        },
        "ResourceId": {
          "Ref": "SharedVPC6716DA5E",
        },
        "ResourceType": "VPC",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/FlowLog",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "SharedFlowLogIAMRoleA0029984": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "vpc-flow-logs.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/FlowLog",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SharedFlowLogIAMRoleDefaultPolicy5D283BCF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SharedFLowLogsLogGroupE884FFC6",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SharedFlowLogIAMRoleA0029984",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SharedFlowLogIAMRoleDefaultPolicy5D283BCF",
        "Roles": [
          {
            "Ref": "SharedFlowLogIAMRoleA0029984",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SharedVPC6716DA5E": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "SharedVPCAppSyncEndpoint1FEC814C": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "SharedVPCAppSyncEndpointSecurityGroupCECBB909",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".appsync-api",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
          },
          {
            "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "SharedVPCAppSyncEndpointSecurityGroupCECBB909": {
      "Properties": {
        "GroupDescription": "Default/Shared/VPC/AppSyncEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "SharedVPC6716DA5E",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "SharedVPC6716DA5E",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SharedVPCBatchEndpoint8F2C93AC": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "SharedVPCBatchEndpointSecurityGroupCA581A78",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".batch",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
          },
          {
            "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "SharedVPCBatchEndpointSecurityGroupCA581A78": {
      "Properties": {
        "GroupDescription": "Default/Shared/VPC/BatchEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "SharedVPC6716DA5E",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "SharedVPC6716DA5E",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SharedVPCDynamoDBEndpoint7FDC246D": {
      "Properties": {
        "RouteTableIds": [
          {
            "Ref": "SharedVPCprivateSubnet1RouteTable58B60459",
          },
          {
            "Ref": "SharedVPCprivateSubnet2RouteTable36F07E09",
          },
          {
            "Ref": "SharedVPCpublicSubnet1RouteTableCE49215C",
          },
          {
            "Ref": "SharedVPCpublicSubnet2RouteTableCF47EAD7",
          },
          {
            "Ref": "SharedVPCisolatedSubnet1RouteTableFEE7065A",
          },
          {
            "Ref": "SharedVPCisolatedSubnet2RouteTable661FCE70",
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".dynamodb",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "SharedVPCEC2EndpointBE1191F4": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "SharedVPCEC2EndpointSecurityGroup904C1E6C",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".ec2",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
          },
          {
            "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "SharedVPCEC2EndpointSecurityGroup904C1E6C": {
      "Properties": {
        "GroupDescription": "Default/Shared/VPC/EC2Endpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "SharedVPC6716DA5E",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "SharedVPC6716DA5E",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SharedVPCECSEndpointC6482F7A": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "SharedVPCECSEndpointSecurityGroup7B8618C6",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".ecs",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
          },
          {
            "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "SharedVPCECSEndpointSecurityGroup7B8618C6": {
      "Properties": {
        "GroupDescription": "Default/Shared/VPC/ECSEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "SharedVPC6716DA5E",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "SharedVPC6716DA5E",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SharedVPCIGW91FEB7EF": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "SharedVPCKMSEndpointBF4D576E": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "SharedVPCKMSEndpointSecurityGroup3C428680",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".kms",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
          },
          {
            "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "SharedVPCKMSEndpointSecurityGroup3C428680": {
      "Properties": {
        "GroupDescription": "Default/Shared/VPC/KMSEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "SharedVPC6716DA5E",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "SharedVPC6716DA5E",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SharedVPCKendraEndpoint3F711235": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "SharedVPCKendraEndpointSecurityGroup66109AF1",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".kendra",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
          },
          {
            "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "SharedVPCKendraEndpointSecurityGroup66109AF1": {
      "Properties": {
        "GroupDescription": "Default/Shared/VPC/KendraEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "SharedVPC6716DA5E",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "SharedVPC6716DA5E",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SharedVPCLambdaEndpoint4D3CF6B3": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "SharedVPCLambdaEndpointSecurityGroup78411AE4",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".lambda",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
          },
          {
            "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "SharedVPCLambdaEndpointSecurityGroup78411AE4": {
      "Properties": {
        "GroupDescription": "Default/Shared/VPC/LambdaEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "SharedVPC6716DA5E",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "SharedVPC6716DA5E",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SharedVPCRDSDataEndpointF151E58D": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "SharedVPCRDSDataEndpointSecurityGroup6C9AF6CB",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".rds-data",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
          },
          {
            "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "SharedVPCRDSDataEndpointSecurityGroup6C9AF6CB": {
      "Properties": {
        "GroupDescription": "Default/Shared/VPC/RDSDataEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "SharedVPC6716DA5E",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "SharedVPC6716DA5E",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SharedVPCRDSEndpointC8F27EF3": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "SharedVPCRDSEndpointSecurityGroupA26D3CBA",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".rds",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
          },
          {
            "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "SharedVPCRDSEndpointSecurityGroupA26D3CBA": {
      "Properties": {
        "GroupDescription": "Default/Shared/VPC/RDSEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "SharedVPC6716DA5E",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "SharedVPC6716DA5E",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SharedVPCS3GatewayEndpoint13AA3DEC": {
      "Properties": {
        "RouteTableIds": [
          {
            "Ref": "SharedVPCprivateSubnet1RouteTable58B60459",
          },
          {
            "Ref": "SharedVPCprivateSubnet2RouteTable36F07E09",
          },
          {
            "Ref": "SharedVPCpublicSubnet1RouteTableCE49215C",
          },
          {
            "Ref": "SharedVPCpublicSubnet2RouteTableCF47EAD7",
          },
          {
            "Ref": "SharedVPCisolatedSubnet1RouteTableFEE7065A",
          },
          {
            "Ref": "SharedVPCisolatedSubnet2RouteTable661FCE70",
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "SharedVPCS3InterfaceEndpointD26A9383": {
      "DependsOn": [
        "SharedVPCS3GatewayEndpoint13AA3DEC",
      ],
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "SharedVPCS3InterfaceEndpointSecurityGroup06522FDD",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
          },
          {
            "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "SharedVPCS3InterfaceEndpointSecurityGroup06522FDD": {
      "DependsOn": [
        "SharedVPCS3GatewayEndpoint13AA3DEC",
      ],
      "Properties": {
        "GroupDescription": "Default/Shared/VPC/S3InterfaceEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "SharedVPC6716DA5E",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "SharedVPC6716DA5E",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SharedVPCSNSEndpoint0B44ABE1": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "SharedVPCSNSEndpointSecurityGroup8A7F26EB",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".sns",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
          },
          {
            "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "SharedVPCSNSEndpointSecurityGroup8A7F26EB": {
      "Properties": {
        "GroupDescription": "Default/Shared/VPC/SNSEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "SharedVPC6716DA5E",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "SharedVPC6716DA5E",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SharedVPCSSMEndpointDD973873": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "SharedVPCSSMEndpointSecurityGroupE3573FB8",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".ssm",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
          },
          {
            "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "SharedVPCSSMEndpointSecurityGroupE3573FB8": {
      "Properties": {
        "GroupDescription": "Default/Shared/VPC/SSMEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "SharedVPC6716DA5E",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "SharedVPC6716DA5E",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SharedVPCSageMakerRuntimeEndpoint7727FF26": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "SharedVPCSageMakerRuntimeEndpointSecurityGroupFC2965AE",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".sagemaker.runtime",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
          },
          {
            "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "SharedVPCSageMakerRuntimeEndpointSecurityGroupFC2965AE": {
      "Properties": {
        "GroupDescription": "Default/Shared/VPC/SageMakerRuntimeEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "SharedVPC6716DA5E",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "SharedVPC6716DA5E",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SharedVPCSecretsManagerEndpoint55576342": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "SharedVPCSecretsManagerEndpointSecurityGroup3699366E",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".secretsmanager",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
          },
          {
            "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "SharedVPCSecretsManagerEndpointSecurityGroup3699366E": {
      "Properties": {
        "GroupDescription": "Default/Shared/VPC/SecretsManagerEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "SharedVPC6716DA5E",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "SharedVPC6716DA5E",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SharedVPCStepFunctionsEndpoint3D9A9344": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "SharedVPCStepFunctionsEndpointSecurityGroup4C10DF10",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".states",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
          },
          {
            "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "SharedVPCStepFunctionsEndpointSecurityGroup4C10DF10": {
      "Properties": {
        "GroupDescription": "Default/Shared/VPC/StepFunctionsEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "SharedVPC6716DA5E",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "SharedVPC6716DA5E",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SharedVPCVPCGWA47152A6": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "SharedVPCIGW91FEB7EF",
        },
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "SharedVPCisolatedSubnet1RouteTableAssociation9FA2357F": {
      "Properties": {
        "RouteTableId": {
          "Ref": "SharedVPCisolatedSubnet1RouteTableFEE7065A",
        },
        "SubnetId": {
          "Ref": "SharedVPCisolatedSubnet1SubnetAE743C40",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "SharedVPCisolatedSubnet1RouteTableFEE7065A": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC/isolatedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "SharedVPCisolatedSubnet1SubnetAE743C40": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "isolated",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC/isolatedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "SharedVPCisolatedSubnet2RouteTable661FCE70": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC/isolatedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "SharedVPCisolatedSubnet2RouteTableAssociation61642BDD": {
      "Properties": {
        "RouteTableId": {
          "Ref": "SharedVPCisolatedSubnet2RouteTable661FCE70",
        },
        "SubnetId": {
          "Ref": "SharedVPCisolatedSubnet2SubnetBC723A26",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "SharedVPCisolatedSubnet2SubnetBC723A26": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "isolated",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC/isolatedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "SharedVPCprivateSubnet1DefaultRoute608F3753": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "SharedVPCpublicSubnet1NATGateway5CEA2F2A",
        },
        "RouteTableId": {
          "Ref": "SharedVPCprivateSubnet1RouteTable58B60459",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "SharedVPCprivateSubnet1RouteTable58B60459": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC/privateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "SharedVPCprivateSubnet1RouteTableAssociation83D920FA": {
      "Properties": {
        "RouteTableId": {
          "Ref": "SharedVPCprivateSubnet1RouteTable58B60459",
        },
        "SubnetId": {
          "Ref": "SharedVPCprivateSubnet1Subnet5A4C2616",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "SharedVPCprivateSubnet1Subnet5A4C2616": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC/privateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "SharedVPCprivateSubnet2DefaultRoute4387C202": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "SharedVPCpublicSubnet1NATGateway5CEA2F2A",
        },
        "RouteTableId": {
          "Ref": "SharedVPCprivateSubnet2RouteTable36F07E09",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "SharedVPCprivateSubnet2RouteTable36F07E09": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC/privateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "SharedVPCprivateSubnet2RouteTableAssociation6788E94C": {
      "Properties": {
        "RouteTableId": {
          "Ref": "SharedVPCprivateSubnet2RouteTable36F07E09",
        },
        "SubnetId": {
          "Ref": "SharedVPCprivateSubnet2SubnetF203CD06",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "SharedVPCprivateSubnet2SubnetF203CD06": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC/privateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "SharedVPCpublicSubnet1DefaultRouteC6B32517": {
      "DependsOn": [
        "SharedVPCVPCGWA47152A6",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "SharedVPCIGW91FEB7EF",
        },
        "RouteTableId": {
          "Ref": "SharedVPCpublicSubnet1RouteTableCE49215C",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "SharedVPCpublicSubnet1EIPA9E2FC1C": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC/publicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "SharedVPCpublicSubnet1NATGateway5CEA2F2A": {
      "DependsOn": [
        "SharedVPCpublicSubnet1DefaultRouteC6B32517",
        "SharedVPCpublicSubnet1RouteTableAssociationB17F0447",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "SharedVPCpublicSubnet1EIPA9E2FC1C",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "SharedVPCpublicSubnet1SubnetDA8AC0A0",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC/publicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "SharedVPCpublicSubnet1RouteTableAssociationB17F0447": {
      "Properties": {
        "RouteTableId": {
          "Ref": "SharedVPCpublicSubnet1RouteTableCE49215C",
        },
        "SubnetId": {
          "Ref": "SharedVPCpublicSubnet1SubnetDA8AC0A0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "SharedVPCpublicSubnet1RouteTableCE49215C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC/publicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "SharedVPCpublicSubnet1SubnetDA8AC0A0": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC/publicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "SharedVPCpublicSubnet2DefaultRouteCA89B67C": {
      "DependsOn": [
        "SharedVPCVPCGWA47152A6",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "SharedVPCIGW91FEB7EF",
        },
        "RouteTableId": {
          "Ref": "SharedVPCpublicSubnet2RouteTableCF47EAD7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "SharedVPCpublicSubnet2RouteTableAssociation1D77511F": {
      "Properties": {
        "RouteTableId": {
          "Ref": "SharedVPCpublicSubnet2RouteTableCF47EAD7",
        },
        "SubnetId": {
          "Ref": "SharedVPCpublicSubnet2SubnetC1B203C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "SharedVPCpublicSubnet2RouteTableCF47EAD7": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC/publicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "SharedVPCpublicSubnet2SubnetC1B203C4": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Default/Shared/VPC/publicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "SharedVPC6716DA5E",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "SharedXOriginVerifySecret258B0376": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-SMG4",
              "reason": "Secret is generated by CDK.",
            },
          ],
        },
      },
      "Properties": {
        "GenerateSecretString": {
          "ExcludePunctuation": true,
          "GenerateStringKey": "headerValue",
          "SecretStringTemplate": "{}",
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
